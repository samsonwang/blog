<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hack Note</title><link>https://samsonwang.me/</link><description>Personal handnote on software development</description><atom:link href="https://samsonwang.me/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2017-2019 &lt;a href="mailto:wangzhilv@gmail.com"&gt;Samson Wang&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/"&gt;&lt;img alt="知识共享许可协议" style="padding-bottom:2px" src="https://i.creativecommons.org/l/by-nc/4.0/80x15.png" /&gt;&lt;/a&gt;
</copyright><lastBuildDate>Mon, 29 Apr 2019 02:27:18 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>redis中的数据结构</title><link>https://samsonwang.me/posts/redis-data-structure/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
本文主要介绍了 redis 中的底层数据结构类型，并比较了操作这些数据时的时间复杂度。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.me/posts/redis-data-structure/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>data structure</category><category>nosql</category><category>not-index</category><category>redis</category><guid>https://samsonwang.me/posts/redis-data-structure/</guid><pubDate>Mon, 29 Apr 2019 01:37:50 GMT</pubDate></item><item><title>Makefile 要点备忘</title><link>https://samsonwang.me/posts/makefile_cheatsheet/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
本文包含常用的 Makefile 语法，在这里总结一下，方便以后查阅。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.me/posts/makefile_cheatsheet/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>cheatsheet</category><category>makefile</category><category>not-index</category><guid>https://samsonwang.me/posts/makefile_cheatsheet/</guid><pubDate>Sun, 28 Apr 2019 02:06:38 GMT</pubDate></item><item><title>redis基础</title><link>https://samsonwang.me/posts/redis-fundamental/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
本文是 &lt;a href="https://www.tutorialspoint.com/redis/"&gt;tutorialspoint&lt;/a&gt; 提供的 &lt;a href="https://redis.io/"&gt;redis&lt;/a&gt; 教程的学习笔记。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.me/posts/redis-fundamental/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>memcached</category><category>nosql</category><category>redis</category><guid>https://samsonwang.me/posts/redis-fundamental/</guid><pubDate>Wed, 24 Apr 2019 03:01:09 GMT</pubDate></item><item><title>深入探索C++内存模型（4）</title><link>https://samsonwang.me/posts/inside-the-cpp-object-model-4/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
第四章是Function语意学，这一章主要介绍类相关函数的底层实现原理，就虚函数进行了展开讨论，通过实际代码的测试结果验证分析结论。对 inline 函数可能会出现的问题进行了分析，对 inline 函数的使用提出了指导意见。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.me/posts/inside-the-cpp-object-model-4/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>cpp</category><category>digest</category><category>Lippman</category><category>memory layout</category><category>object model</category><guid>https://samsonwang.me/posts/inside-the-cpp-object-model-4/</guid><pubDate>Mon, 22 Apr 2019 02:27:22 GMT</pubDate></item><item><title>深入探索C++内存模型（3）</title><link>https://samsonwang.me/posts/inside-the-cpp-object-model-3/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
第三章的标题是Data语意学，这一章主要的研究对象是类的成员变量相关的操作原理，静态成员变量与非静态成员变量，单一继承、多重继承、虚继承对成员变量内存分布和存取性能的影响。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.me/posts/inside-the-cpp-object-model-3/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>cpp</category><category>digest</category><category>Lippman</category><category>memory layout</category><category>object model</category><guid>https://samsonwang.me/posts/inside-the-cpp-object-model-3/</guid><pubDate>Fri, 12 Apr 2019 05:13:16 GMT</pubDate></item><item><title>在Linux终端中进行递归搜索</title><link>https://samsonwang.me/posts/linux-command-examples-grep-and-find/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
有时候我们需要对某个目录中的所有文件进行递归式搜索。递归搜索，即搜索该目录中的所有文件和其二级目录下的所有文件，依此类推。本文给出了两种实现思路，分别使用 &lt;code&gt;grep&lt;/code&gt; 和 &lt;code&gt;find&lt;/code&gt; 命令。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.me/posts/linux-command-examples-grep-and-find/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>find</category><category>grep</category><category>linux</category><category>search</category><guid>https://samsonwang.me/posts/linux-command-examples-grep-and-find/</guid><pubDate>Thu, 11 Apr 2019 05:47:28 GMT</pubDate></item><item><title>初识docker</title><link>https://samsonwang.me/posts/docker-for-beginners/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
这篇文章是 &lt;a href="https://docker-curriculum.com/"&gt;docker-curriculum.com&lt;/a&gt; 的学习笔记，包含 docker 的基础概念和入门用法。通过阅读该教程，我对 docker 以及容器化的软件开发、分发和部署有了初步的认识。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.me/posts/docker-for-beginners/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>beginner</category><category>cheatsheet</category><category>docker</category><guid>https://samsonwang.me/posts/docker-for-beginners/</guid><pubDate>Wed, 03 Apr 2019 03:19:59 GMT</pubDate></item><item><title>分支预测技术</title><link>https://samsonwang.me/posts/branch-prediction-optimization/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
分支预测技术是CPU体系结构（architecture）中的知识点，用于提高指令（instruction）的执行效率。本篇博文是对网络上相关信息的总结，以备后续查阅使用。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.me/posts/branch-prediction-optimization/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>branch prediction</category><category>cpp</category><category>optimization</category><guid>https://samsonwang.me/posts/branch-prediction-optimization/</guid><pubDate>Thu, 28 Mar 2019 02:13:32 GMT</pubDate></item><item><title>深入探索C++内存模型（2）</title><link>https://samsonwang.me/posts/inside-the-cpp-object-model-2/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
构造函语意学是本书的第二章，这一章节主要针对构造函数在不同情况的底层实现细节进行的全面的讨论。阐述了在类对象（class object）的构造期间，编译器进行的额外操作的原理。针对默认构造函数（default constructor）和拷贝构造函数（copy constructor）分别展开了细致的讨论，引出了编译器 NRV 优化的概念，揭示了成员初始化列表的作用机理。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.me/posts/inside-the-cpp-object-model-2/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>cpp</category><category>digest</category><category>Lippman</category><category>memory layout</category><category>object model</category><guid>https://samsonwang.me/posts/inside-the-cpp-object-model-2/</guid><pubDate>Mon, 25 Mar 2019 07:52:36 GMT</pubDate></item><item><title>深入探索C++内存模型（1）</title><link>https://samsonwang.me/posts/inside-the-cpp-object-model-1/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
最近花时间读了一下《深入探索C++内存模型》，这本带我了解到了更底层的C++知识。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
这本书从C++语言各种特性的实现机制上进行细致剖析，进而总结出对软件开发具有指导意义的经验和结论。这本书的目标群体是具有开发经验的中高级开发人员，其内容的专业性是不容质疑的。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
从我的阅读感受上讲，它相对比那些一般的技术文档要耗时耗力。全书共三百多页，粗略地估算了一下，我却用了一个月的空余时间才读完。我会将读书笔记整理成博文，这样能够加深记忆，也方便以后查阅。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.me/posts/inside-the-cpp-object-model-1/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>cpp</category><category>digest</category><category>Lippman</category><category>memory layout</category><category>object model</category><guid>https://samsonwang.me/posts/inside-the-cpp-object-model-1/</guid><pubDate>Mon, 11 Mar 2019 02:30:13 GMT</pubDate></item></channel></rss>