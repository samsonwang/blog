#+BEGIN_COMMENT
.. title: Makefile 要点备忘
.. slug: makefile_cheatsheet
.. date: 2019-04-28 10:06:38 UTC+08:00
.. tags: cheatsheet, makefile, not-index
.. category: linux
.. link: https://devhints.io/makefile
.. description:
.. type: text
/.. status: draft
#+END_COMMENT
#+OPTIONS: num:nil

#+TITLE: Makefile 要点备忘

本文包含常用的 Makefile 语法，在这里总结一下，方便以后查阅。

{{{TEASER_END}}}

** 变量与赋值
#+BEGIN_SRC makefile
uglify = $(uglify)        # lazy assignment
compressor := $(uglify)   # immediate assignment
prefix ?= /usr/local      # safe assignment
#+END_SRC

** 特殊变量
#+BEGIN_SRC makefile
out.o: src.c src.h
  $@   # "out.o" (target)
  $<   # "src.c" (first prerequisite)
  $^   # "src.c src.h" (all prerequisites)

%.o: %.c
  $*   # the 'stem' with which an implicit rule matches ("foo" in "foo.c")

also:
  $+   # prerequisites (all, with duplication)
  $?   # prerequisites (new ones)
  $|   # prerequisites (order-only?)

  $(@D) # target directory
#+END_SRC

** 命令前缀
=-=	Ignore errors
=@=	Don’t print command
=+=	Run even if Make is in ‘don’t execute’ mode

#+BEGIN_SRC makefile
build:
    @echo "compiling"
    -gcc $< $@

-include .depend
#+END_SRC

** 文件相关操作
列举所有文件
#+BEGIN_SRC makefile
js_files  := $(wildcard test/*.js)
all_files := $(shell find images -name "*")
#+END_SRC

替换文件名
#+BEGIN_SRC makefile
file     = $(SOURCE:.cpp=.o)   # foo.cpp => foo.o
outputs  = $(files:src/%.coffee=lib/%.js)

outputs  = $(patsubst %.c, %.o, $(wildcard *.c))
assets   = $(patsubst images/%, assets/%, $(wildcard images/*))
#+END_SRC

更多函数
#+BEGIN_SRC makefile
$(strip $(string_var))

$(filter %.less, $(files))
$(filter-out %.less, $(files))
#+END_SRC

** 构建操作（编译目标文件）
#+BEGIN_SRC makefile
%.o: %.c
  ffmpeg -i $< > $@   # Input and output
  foo $^
#+END_SRC

** 引入其他 makefile 文件
#+BEGIN_SRC makefile
-include foo.make
#+END_SRC

** make 命令选项
#+BEGIN_SRC sh
make
  -e, --environment-overrides
  -B, --always-make
  -s, --silent

  -j, --jobs=N   # parallel processing
#+END_SRC

** 条件判断
#+BEGIN_SRC makefile
foo: $(objects)
ifeq ($(CC),gcc)
        $(CC) -o foo $(objects) $(libs_for_gcc)
else
        $(CC) -o foo $(objects) $(normal_libs)
endif
#+END_SRC

** 递归
#+BEGIN_SRC makefile
deploy:
  $(MAKE) deploy2
#+END_SRC


** 参考资料
- [[https://devhints.io/makefile][devhints.io - makefile]]
- [[https://gist.github.com/isaacs/62a2d1825d04437c6f08][github gist - isaacs's makefile tutorial]]
