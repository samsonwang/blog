#+BEGIN_COMMENT
.. title: 每周算法:最长不含重复字符的子串
.. slug: algorithm-weekly-longest-substring-without-repeating-characters
.. date: 2018-08-02 11:43:14 UTC+08:00
.. tags: draft, algorithm
.. category: algorithm
.. link: https://leetcode.com/problems/longest-substring-without-repeating-characters/description/
.. description: 
.. type: text
#+END_COMMENT

#+TITLE: 每周算法:最长不含重复字符的子串

** Description
Given a string, find the length of the longest substring without repeating characters.

*Examples:*
Given "abcabcbb", the answer is "abc", which the length is 3.
Given "bbbbb", the answer is "b", with the length of 1.
Given "pwwkew", the answer is "wke", with the length of 3. Note that the answer must be a substring, "pwke" is a subsequence and not a substring.

来源：[[https://leetcode.com/problems/longest-substring-without-repeating-characters/description/][LeetCode 03 Longest Substring Without Repeating Characters]]

** Solution
好久没刷算法题了，手有点生，没有什么思路，下面的答案是看过提示之后才写出来的。

需要考虑的问题：
1. 字符串为空字符串
2. 字符串中只有一个字符


下面的

*** Approach 1 暴力解法


*** Approach 2 滑动窗口
滑动窗口的概念在字符串处理问题中十分常用



*** Approach 3 优化的滑动窗口






*** 

#+BEGIN_SRC cpp
int lengthOfLongestSubstring(string s) {
	vector<int> dict(256, -1);
  int maxLen = 0, start = -1;
  for (int i = 0; i != s.length(); i++) {
  	if (dict[s[i]] > start){
    	start = dict[s[i]];
    }
    dict[s[i]] = i;
    maxLen = max(maxLen, i - start);
  }
  return maxLen;
}
#+END_SRC
