#+BEGIN_COMMENT
.. title: Linux常用命令行指令 - top
.. slug: linux-command-examples-top
.. date: 2018-06-14 11:26:53 UTC+08:00
.. tags: linux
.. category: linux
.. link: 
.. description: 
.. type: text
#+END_COMMENT
#+OPTIONS: num:t
#+TITLE:Linux常用命令行指令 - top

linux的top命令能够动态显示当前系统的运行状态。它能够显示操作系统的汇总信息和当前系统上的正在运行的进程列表。

** 统计信息说明
(可以通过配置文件修改通计信息区的显示格式，下文所描述的都是在默认配置下的显示内容)
*** 第1行
- 当前系统时间
- up 当前系统的启动时长
- 当前登录的用户数量
- 当前系统的平均负载（分别是1min,5min,10min的平均负载）
这一行信息也可以通过 ~uptime~ 和 ~w~ 指令获得
*** 第2行
- 总进程数
- 正在运行的进程数
- 休眠的进程数
- 停止的进程数
- 僵尸进程数
*** 第3行
- us 用户空间占用CPU百分比
- sy 内核空间占用CPU百分比
- ni 用户进程空间内改变过优先级的进程占用CPU百分比
- id 空闲CPU百分比
- wa 等待输入输出的CPU时间百分比
- hi CPU服务于硬件中断所耗费的时间总额
- si CPU服务软中断所耗费的时间总额
- st Steal time 虚拟机被hypervisor偷去的CPU时间（如果当前处于一个hypervisor下的vm，实际上hypervisor也是要消耗一部分CPU处理时间的）

*** 第4行
- 物理内存总量
- 使用的物理内存总量
- 空闲内存总量
- 用作内核缓存的内存量

*** 第5行
- 交换区总量
- 使用的交换区总量
- 空间交换区总量
- 缓冲交换区总量

** 进程信息
在top命令中按f按可以查看显示的列信息，按对应字母来开启/关闭列，大写字母表示开启，小写字母表示关闭。带*号的是默认列。

A: PID = (Process Id) 进程Id；
E: USER = (User Name) 进程所有者的用户名；
H: PR = (Priority) 优先级
I: NI = (Nice value) nice值。负值表示高优先级，正值表示低优先级
O: VIRT = (Virtual Image (kb)) 进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES
Q: RES = (Resident size (kb)) 进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA
T: SHR = (Shared Mem size (kb)) 共享内存大小，单位kb
W: S = (Process Status) 进程状态。D=不可中断的睡眠状态,R=运行,S=睡眠,T=跟踪/停止,Z=僵尸进程
K: %CPU = (CPU usage) 上次更新到现在的CPU时间占用百分比
N: %MEM = (Memory usage (RES)) 进程使用的物理内存百分比
M: TIME+ = (CPU Time, hundredths) 进程使用的CPU时间总计，单位1/100秒 
b: PPID = (Parent Process Pid) 父进程Id 
c: RUSER = (Real user name) 
d: UID = (User Id) 进程所有者的用户id 
f: GROUP = (Group Name) 进程所有者的组名 
g: TTY = (Controlling Tty) 启动进程的终端名。不是从终端启动的进程则显示为 ? 
j: P = (Last used cpu (SMP)) 最后使用的CPU，仅在多CPU环境下有意义 
p: SWAP = (Swapped size (kb)) 进程使用的虚拟内存中，被换出的大小，单位kb 
l: TIME = (CPU Time) 进程使用的CPU时间总计，单位秒 
r: CODE = (Code size (kb)) 可执行代码占用的物理内存大小，单位kb 
s: DATA = (Data+Stack size (kb)) 可执行代码以外的部分(数据段+栈)占用的物理内存大小，单位kb 
u: nFLT = (Page Fault count) 页面错误次数 
v: nDRT = (Dirty Pages count) 最后一次写入到现在，被修改过的页面数 
y: WCHAN = (Sleeping in Function) 若该进程在睡眠，则显示睡眠中的系统函数名 
z: Flags = (Task Flags <sched.h>) 任务标志，参考 sched.h
X: COMMAND = (Command name/line) 命令名/命令行


** 参考资料
- [[https://www.tecmint.com/12-top-command-examples-in-linux/][tecmint.com]]
- [[https://blog.csdn.net/sanshiqiduer/article/details/1933625][csdn blog]]


