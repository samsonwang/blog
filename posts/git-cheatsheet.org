#+BEGIN_COMMENT
.. title: 常用git操作备忘
.. slug: git-cheatsheet
.. date: 2018-01-19 12:39:16 UTC+08:00
.. tags: git, cheatsheet
.. category: tips
.. link: 
.. description: 
.. type: text
#+END_COMMENT

#+TITLE:常用git操作备忘
对常用指令进行总结，方便以后遇到相同情况时还需要查资料。
** 1 撤销与回退相关
*** 1.1 修正最近的提交消息
*情景* ：在最近的一次提交（ ~git commit~ ）中输入的信息有误，并且这次提交没有被推送（ ~git push~ ）到远程仓库。
*方法* ： ~git commit --amend~ 或 ~git commit --amend -m "correct_message"~
*说明* ： ~git commit --amend~ 会使用一个新的提交更新并替换最近的一次提交，如果有在临时区域（staged）的修改，也会合并提交；如果有新的提交信息，则会一并提交。

*** 1.2 撤销本地变更
*情景* ：当无意中修改了一个文件，想要回退这个文件的修改时。
*方法* ： ~git checkout -- <filename>~
*说明* ：这条指令会把该文件回退到某个git记录中的版本，git默认会回退到 ~HEAD~ 版本。

*** 1.3 重置本地修改
*情景* ：已经进行了多次提交，但是没有推送到版本库中，希望撤销这些提交。
*方法* ： ~git reset <last good SHA>~ 或 ~git reset --hard <last good SHA>~
*说明* ： ~git reset~ 会把本地代码恢复到没有提交（ ~commit~ ）的状态，做出的修改会保留。 ~git reset --hard~ 会把这些修改丢弃掉。

*** 1.4 恢复被重置的本地修改
*情景* ：在按照1.3中操作后，想恢复重置以前的状态。
*方法* ： ~git reflog~ 后执行 ~git reset~ 或 ~git checkout~
*说明* ： ~git reflog~ 会呈现所有提交过的历史，是一个十分实用的功能。

** 2 分支操作相关
*** 2.1 创建一个本地分支并推送到远端
*方法* ：
#+BEGIN_SRC shell
git branch branch_name
git push origin branch_name
#+END_SRC

*** 2.2 在本地创建一个远程分支
*方法* ：
#+BEGIN_SRC shell
git fetch origin
git checkout -b  branch_name origin/branch_name
#+END_SRC

*** 2.3 在分支上进行进度迁移
*情景* ： 进行了几次提交后，发现自己正在错误的分支上干活。
*方法* ：
#+BEGIN_SRC shell
git branch feature
git reset --hard origin/master
git checkout feature
#+END_SRC
*原理* ： 使用feature分支复制了当前分支，将当前分支回退到初始状态，在feature分支上接着干活。

