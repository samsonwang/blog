#+BEGIN_COMMENT
.. title: Linux下使用gdb的调试技巧（2）
.. slug: debug-with-gdb-on-linux-2
.. date: 2018-04-03 22:51:39 UTC+08:00
.. tags: linux, gdb
.. category: linux
.. link: 
.. description: 
.. type: text
#+END_COMMENT

#+TITLE:Linux下使用gdb的调试技巧（2）
相关文章：[[https://samsonwang.me/posts/debug-with-gdb-on-linux/][Linux下使用gdb的调试技巧（1）]]

本文重点介绍在gdb模式下的常用命令。

查看帮助信息
#+BEGIN_SRC gdb
(gdb) help all
#+END_SRC

查看线程信息
#+BEGIN_SRC gdb
(gdb) info thread
#+END_SRC

切换到某一线程
#+BEGIN_SRC gdb
(gdb) thread 2
#+END_SRC

查看调用堆栈信息
#+BEGIN_SRC gdb
(gdb) bt
#+END_SRC

查看某个调用栈
#+BEGIN_SRC gdb
(gdb) frame 3
#+END_SRC

增加断点
断点格式：
- 函数名
- 文件名：行号
- 当前调试文件的行号
#+BEGIN_SRC gdb
(gdb) breakpoint xxx
#+END_SRC

删除断点
#+BEGIN_SRC gdb
(gdb) delete xxx
#+END_SRC

启用/禁用断点
#+BEGIN_SRC gdb
(gdb) disable/enable xxx
#+END_SRC

查看断点信息
#+BEGIN_SRC gdb
(gdb) info break
#+END_SRC

临时断点，临时断点的使用方法与普通断点相同
#+BEGIN_SRC gdb
(gdb) tb xxx
#+END_SRC

在gdb模式下，回车会执行上一次输入的命令

运行到指定行
#+BEGIN_SRC gdb
until 81
#+END_SRC

在gdb中打印长字符串
#+BEGIN_SRC gdb
(gdb) set print element 0
#+END_SRC

在gdb中强制在一个线程内调试运行
#+BEGIN_SRC gdb
set scheduler-locking step
#+END_SRC

在gdb中向程序发送信号
#+BEGIN_SRC gdb
(gdb) signal
#+END_SRC

