#+BEGIN_COMMENT
.. title: 同步和异步、阻塞和非阻塞
.. slug: asynchronous-synchronous-and-blocking-unblocking
.. date: 2018-06-21 09:27:06 UTC+08:00
.. tags: draft, network
.. category: 
.. link: 
.. description: 
.. type: text
#+END_COMMENT

#+TITLE: 同步和异步、阻塞和非阻塞

** 同步和异步
同步和异步指的是在进行I/O操作完成之前，是否允许其他处理步骤继续执行。
计算机中的I/O操作相对于数据处理操作时十分耗时的。

一个简单的I/O操作方式就是启动连接并等待操作完成，但是这样的操作（同步阻塞I/O）在通信过程中会阻塞进程的处理进度。
相应的，可以在启动通信的同时进行其他的处理，并不需要等待I/O操作的完成，这样的操作就被称作是异步I/O。那些依赖于I/O操作执行完成的任务会阻塞等待I/O操作的完成，其他不依赖与I/O操作的任务能够继续执行。

同步模型常用的函数接口：read,write,send,recv
异步模型常用的函数接口：aio_write,aio_read
异步模型示例代码：
linux下的aio示例代码
windows下的aio示例代码

** 阻塞和非阻塞


** 网络编程是一个比较大的话题

reactor模式
libevent框架，事件驱动框架
常见的网络通信模型种类


** 参考资料
https://blog.csdn.net/hguisu/article/details/38638183




