<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hack Note (Posts about qt)</title><link>https://samsonwang.me/</link><description></description><atom:link href="https://samsonwang.me/tags/qt.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2017-2018 &lt;a href="mailto:wangzhilv@gmail.com"&gt;Samson Wang&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/"&gt;&lt;img alt="知识共享许可协议" style="padding-bottom:2px" src="https://i.creativecommons.org/l/by-nc/4.0/80x15.png" /&gt;&lt;/a&gt;
</copyright><lastBuildDate>Sun, 21 Oct 2018 14:24:33 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>关于Qt中使用中文编码的一些问题</title><link>https://samsonwang.me/posts/qt-chinese-encoding/</link><dc:creator>Samson Wang</dc:creator><description>&lt;p&gt;
Qt库作为一个开源库，并且支持多语言。在开发时需要考虑字符编码问题。&lt;br&gt;
我现在的使用Qt开发环境为VS2012+Qt5.1.1，所以一下所讨论的也是基于这个版本而言的。目前Qt5已经将 &lt;code&gt;tr()&lt;/code&gt; 删掉了。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;在windows下使用Qt库进行开发&lt;/b&gt;&lt;br&gt;
有两种主流开发环境:&lt;br&gt;
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;使用Qt Creator作为开发环境&lt;br&gt;&lt;/li&gt;
&lt;li&gt;使用Visual Studio + Visual Assist + Qt Visual Studio Addon作为开发环境&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
目前我使用的就是第二种开发环境，鉴于在Windows平台下没有哪个开发环境能与Visual Studio相媲美。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;使用VS开发Qt程序时需要注意源文件的编码格式&lt;/b&gt;&lt;br&gt;
Qt5官方推荐的源文件编码格式为UTF-8，QString内部的编码格式就是UTF-8，使用QtCreator创建的源文件的编码格式也是UTF-8 without BOM。&lt;br&gt;
但是VS在中文操作系统上，如果不进行特殊的设置，默认创建的含有中文的源文件编码格式为gb3212。这样的原始字符串就是gb2312格式的，在使用时需要进行特殊转换，这样显示在界面上才不会乱码。&lt;br&gt;
推荐使用一下两种方法解决gb2312编码问题：&lt;br&gt;
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;QString::fromLocale8Bit()&lt;/code&gt; 会将gb2312编码的字符串转换为UTF-8格式以便存放在QString中。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;QStringLiteral()&lt;/code&gt; 是一个宏定义，会在编译期将字符串实例化，对静态字符串使用这个字符串也是一个提高效率的方法(因为减少了运行时的内存申请开销)。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;在VS中使用utf-8 with BOM的源文件格式&lt;/b&gt;&lt;br&gt;
如果使用了utf-8 with BOM的源文件格式，VS会将其中的字符串转换为gb2312编码的中文，这样是为了兼容旧版本的编译器。&lt;br&gt;
可以使用编译选项让VS编译器不进行这项转换，这样就可以直接使用字符串 &lt;code&gt;char*&lt;/code&gt; 初始化QString了。&lt;br&gt;
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;微软在VS2010中提供了 &lt;code&gt;#pragma execution_character_set("utf-8")&lt;/code&gt; 这样的编译选项，能够防止编译器进行文件编码转换，保证字符串保留utf-8格式。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;VS2012 并不支持以上编译选项，VS2012将这个特性取消了&lt;br&gt;&lt;/li&gt;
&lt;li&gt;VS2015 可以使用 &lt;code&gt;/utf-8&lt;/code&gt; 让编译器能够识别 utf-8 without BOM格式的文件，并保留utf-8的字符串编码。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;C++11的编码格式支持&lt;/b&gt;&lt;br&gt;
对于支持C++11标准的编译器，可以采用如下的写法产生utf-8格式的字符串。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;szMsg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u8&lt;/span&gt;&lt;span class="s"&gt;"字符串"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><category>qt</category><category>visual studio</category><guid>https://samsonwang.me/posts/qt-chinese-encoding/</guid><pubDate>Wed, 28 Feb 2018 01:34:08 GMT</pubDate></item></channel></rss>