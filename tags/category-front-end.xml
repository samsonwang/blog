<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hack Note (Posts about front-end)</title><link>https://samsonwang.me/</link><description></description><atom:link href="https://samsonwang.me/tags/category-front-end.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2017-2019 &lt;a href="mailto:wangzhilv@gmail.com"&gt;Samson Wang&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/"&gt;&lt;img alt="知识共享许可协议" style="padding-bottom:2px" src="https://i.creativecommons.org/l/by-nc/4.0/80x15.png" /&gt;&lt;/a&gt;
</copyright><lastBuildDate>Wed, 23 Jan 2019 09:33:30 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>为什么要使用各种前端框架</title><link>https://samsonwang.me/posts/why-front-end-libraries/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div id="outline-container-org2af2a85" class="outline-2"&gt;
&lt;h2 id="org2af2a85"&gt;引言&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org2af2a85"&gt;
&lt;p&gt;
在学习前端的过程中，我开始接触到许多开发框架或开发工具，这些工具让我开始眼花缭乱。使用常规的html/css/js就已经能够开发出这种网页了，所以我问自己，为什么要学习这些框架或工具，这些库是用来解决什么问题的。想明白这个问题，我学习的目的就更加明确，在遇到一些开发情景时，也能够快速准确地挑选出应该使用的框架。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
下面按照我目前的理解，对目前的主流的前端开发库进行一些分析和比较。由于我还是一个初学着，所以我的观点可能还不是很成熟。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org3e93836" class="outline-2"&gt;
&lt;h2 id="org3e93836"&gt;为什么要使用jQuery&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3e93836"&gt;
&lt;p&gt;
jQuery是一个轻量级js库，它有如下特性：&lt;br&gt;
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;简化了HTML/DOM操作&lt;br&gt;&lt;/li&gt;
&lt;li&gt;CSS选择器&lt;br&gt;&lt;/li&gt;
&lt;li&gt;动画特效支持&lt;br&gt;&lt;/li&gt;
&lt;li&gt;解决跨浏览器的兼容行问题&lt;br&gt;&lt;/li&gt;
&lt;li&gt;完善的Ajax支持&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
在查阅资料的过程中，我还听到一些主张停用jQuery的声音。原因就在于随着前端开发生态不断的完善，现代浏览器原生API已经足够好用。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgcc34ff8" class="outline-2"&gt;
&lt;h2 id="orgcc34ff8"&gt;为什么要使用SASS&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgcc34ff8"&gt;
&lt;p&gt;
SASS是一种CSS预编译格式，它最终会编译成CSS。&lt;br&gt;
SASS提供了CSS语法的拓展，它支持变量，算数运算符，循环操作，函数操作，样式模板（mixin）等强大的特性。它能够让开发人员更方便地编写CSS。SASS支持 &lt;code&gt;import&lt;/code&gt; 关键字，这样就能够很方便地对样式进行模块化设计。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
加一句题外话，在使用SASS时，需要考虑的另一个问题就是代码物理结构的安排（直白的说就是目录的划分，源文件的存放位置等），这也是所有代码开发中需要注意的问题。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
与SASS相似的工具还有LESS。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org22661f1" class="outline-2"&gt;
&lt;h2 id="org22661f1"&gt;为什么要使用Bootstrap&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org22661f1"&gt;
&lt;p&gt;
Bootstrap是一个用于快速开发网页的前端框架。以我目前的理解来看，它更像是一个网页样式框架。&lt;br&gt;
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;丰富的基础样式和资源&lt;br&gt;&lt;/li&gt;
&lt;li&gt;响应式（responsive），良好的移动端支持&lt;br&gt;&lt;/li&gt;
&lt;li&gt;强大的网格（grid）系统&lt;br&gt;&lt;/li&gt;
&lt;li&gt;一致性，保证跨浏览器的样式一致&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org5746fd2" class="outline-2"&gt;
&lt;h2 id="org5746fd2"&gt;为什么要使用React&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org5746fd2"&gt;
&lt;p&gt;
DOM操作对性能的影响很大，频繁的DOM操作会使网页渲染的速度变慢，React主要解决了这个问题。&lt;br&gt;
React.js允许在js中编写html，形成Virtual DOM，只在变化进行重新渲染。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
下面的一段文字摘自参考资料中的第5篇文章。&lt;br&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Am I building an app which has lots of DOM interactions, or is it a relatively simple app with relatively few interactions?&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Does my app require a very high browser performance, that any user interactions must immediately be reflected in the UI? Is my data going to change over time, at a high rate?&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Is one user interaction going to affect many other areas/components in the UI?&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Is there a possibility that my app could grow big in the future, and so I would want to write extremely neat, modular front-end JavaScript that is easy to maintain? Would I want to use lots of native JavaScript or would I prefer using a lot of abstractions/methods provided in a framework?&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Would I prefer a framework/library which does not have a high learning curve and which is pretty easy to get started with development?&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;
在使用React之前，问自己这样几个问题，就能够帮助你决定是否需要使用React。&lt;br&gt;
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;所开发的网页应用涉及到很多DOM操作么？&lt;br&gt;&lt;/li&gt;
&lt;li&gt;开发的网页应用需要很高的性能么，这意味着任何用于的操作都要立刻反应在界面上？我的数据变更会很频繁么？&lt;br&gt;&lt;/li&gt;
&lt;li&gt;我开发的应用会在未来逐渐变得复杂么，这样我就需要将前端的js代码模块化？我是否会使用许多原生js特性，是否虚幻使用框架提供的抽象方法&lt;br&gt;&lt;/li&gt;
&lt;li&gt;是否需要一个学习曲线比较平缓的框架，能够方便地上手进行开发？&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org93f93bc" class="outline-2"&gt;
&lt;h2 id="org93f93bc"&gt;参考资料&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org93f93bc"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/jquery/jquery_intro.asp"&gt;w3schools jQuery intro&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nefe/You-Dont-Need-jQuery"&gt;github you don't need jQuery&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mugo.ca/Blog/7-benefits-of-using-SASS-over-conventional-CSS"&gt;7 benefits of SASS&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.devsaran.com/blog/10-best-reasons-use-bootstrap-amazing-web-designs"&gt;10 best reasons to use bootstrap&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scotch.io/@anitashah/what-problems-does-reactjs-solve-when-must-you-select-reactjs"&gt;what problems does reactjs solve&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>css</category><category>front-end</category><category>html</category><category>javascript</category><guid>https://samsonwang.me/posts/why-front-end-libraries/</guid><pubDate>Mon, 27 Aug 2018 14:10:35 GMT</pubDate></item><item><title>css flexbox 总结</title><link>https://samsonwang.me/posts/css-flexbox-layout-cheatsheet/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div id="outline-container-org9e6aee6" class="outline-2"&gt;
&lt;h2 id="org9e6aee6"&gt;引言&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9e6aee6"&gt;
&lt;p&gt;
本文主要对css flexbox的关键点了总结，方便以后在以后的查阅。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgb98293c" class="outline-2"&gt;
&lt;h2 id="orgb98293c"&gt;容器的属性&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb98293c"&gt;
&lt;p&gt;
对于容器需要指定其显示方式为flexbox&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;display&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;flex&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
指定flex排列的方向、在排列时是否会换行，使用 &lt;code&gt;flex-flow&lt;/code&gt; 可以快速设置二者属性&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;flex-direction&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;row&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;row-reverse&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;column&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;column-reverse&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;flex-wrap&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;nowrap&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;wrap&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;wrap-reverse&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;flex-flow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;'flex-direction'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;'flex-wrap'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
用于调整主轴方向的排布（对于 &lt;code&gt;row&lt;/code&gt; 来说就是横向，对于 &lt;code&gt;column&lt;/code&gt; 来说就是纵向）&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;justify-content&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;flex-start&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;flex-end&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;center&lt;/span&gt;
	       &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;space-between&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;space-around&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;space-evenly&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
用于调整相交轴方向的行间排布（对于 &lt;code&gt;row&lt;/code&gt; 来说就是纵向，对于 &lt;code&gt;column&lt;/code&gt; 来说就是横向）&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;align-content&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;flex-start&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;flex-end&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;center&lt;/span&gt;
	     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;stretch&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;space-between&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;space-around&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
用于调整相交交轴方向的单行对齐方式。需要注意的是其中 &lt;code&gt;center&lt;/code&gt; 和 &lt;code&gt;baseline&lt;/code&gt; 的区别： 二者都表示居中，而 &lt;code&gt;baseline&lt;/code&gt; 会保证所有文字的底边处在同一条线上。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;align-items&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;flex-start&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;flex-end&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;center&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;baseline&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;stretch&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org8a1ea42" class="outline-2"&gt;
&lt;h2 id="org8a1ea42"&gt;条目的属性&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org8a1ea42"&gt;
&lt;p&gt;
用于调整顺序&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;order&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;;&lt;/span&gt; &lt;span class="c"&gt;/* default 0 */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
用于调整每个条目的伸展程度&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;flex-grow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;;&lt;/span&gt; &lt;span class="c"&gt;/* default 0 */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
用于调整每个条目的缩小程度&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;flex-shrink&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;;&lt;/span&gt; &lt;span class="c"&gt;/* default 1 */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
用于调整每个条目的默认尺寸&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;flex-basis&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;length&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* default auto */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
设置flex属性，排列顺序为 &lt;code&gt;flex-grow&lt;/code&gt; , &lt;code&gt;flex-shrink&lt;/code&gt; , &lt;code&gt;flex-basis&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;flex&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;none&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;'flex-grow'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;'flex-shrink'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;?&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;'flex-basis'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
用于重载容器的 &lt;code&gt;align-items&lt;/code&gt; 的设置&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;align-self&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;flex-start&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;flex-end&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;center&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;baseline&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;stretch&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org1ee7d8e" class="outline-2"&gt;
&lt;h2 id="org1ee7d8e"&gt;参考资料&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org1ee7d8e"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/"&gt;css-tricks.com&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/css-flexbox-1/"&gt;w3.org css-flexbox&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>css</category><category>flexbox</category><category>layout</category><guid>https://samsonwang.me/posts/css-flexbox-layout-cheatsheet/</guid><pubDate>Tue, 14 Aug 2018 03:29:35 GMT</pubDate></item></channel></rss>