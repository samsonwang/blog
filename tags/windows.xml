<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/blog/assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hack Note (Posts about windows)</title><link>https://samsonwang.github.io/blog/</link><description></description><atom:link href="https://samsonwang.github.io/blog/tags/windows.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2017-2025 &lt;a href="mailto:wangzhilv@gmail.com"&gt;Samson Wang&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/"&gt;
&lt;img alt="cc-by-nc 4.0" style="padding-bottom:2px" src="/images/cc-by-nc.png" /&gt;&lt;/a&gt;
</copyright><lastBuildDate>Wed, 30 Jul 2025 01:34:48 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Windows驱动开发笔记</title><link>https://samsonwang.github.io/blog/posts/2024/windows-driver-dev-tips/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;本文记录了我在开发Windows驱动时的一些心得体会。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://samsonwang.github.io/blog/posts/2024/windows-driver-dev-tips/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>driver</category><category>windows</category><guid>https://samsonwang.github.io/blog/posts/2024/windows-driver-dev-tips/</guid><pubDate>Mon, 29 Jul 2024 10:49:00 GMT</pubDate></item><item><title>将界面窗口置顶显示</title><link>https://samsonwang.github.io/blog/posts/2023/bring-widget-window-to-the-front/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
最近需要实现一个功能，在启动第二个程序实例时将主界面窗口置顶显示。界面程序是基于Qt开发的，在Windows操作系统上实现窗口置顶需要一些特殊的处理。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.github.io/blog/posts/2023/bring-widget-window-to-the-front/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>c++</category><category>qt</category><category>windows</category><guid>https://samsonwang.github.io/blog/posts/2023/bring-widget-window-to-the-front/</guid><pubDate>Tue, 14 Mar 2023 02:48:38 GMT</pubDate></item><item><title>删去不需要的windows右键菜单</title><link>https://samsonwang.github.io/blog/posts/2022/tweak-windows-shell-context-menu/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
一些软件会向 windows 右键菜单中增加功能条目，当我们不需要这些功能时可以删掉他们。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.github.io/blog/posts/2022/tweak-windows-shell-context-menu/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>context-menu</category><category>regedit</category><category>registry</category><category>windows</category><guid>https://samsonwang.github.io/blog/posts/2022/tweak-windows-shell-context-menu/</guid><pubDate>Thu, 10 Nov 2022 01:45:22 GMT</pubDate></item><item><title>在运行时获取动态库的路径</title><link>https://samsonwang.github.io/blog/posts/2021/get-runtime-dll-path/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
最近在开发一个动态库，这个动态库需要在运行时动态地加载另一个动态库。在库发布时会同时提供这两个动态库。库的使用者会主动加载第一个动态库，问题出现在第一个动态库加载第二个动态库时，如何确定第二个动态库的位置。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.github.io/blog/posts/2021/get-runtime-dll-path/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>c</category><category>cpp</category><category>linux</category><category>windows</category><guid>https://samsonwang.github.io/blog/posts/2021/get-runtime-dll-path/</guid><pubDate>Fri, 11 Jun 2021 10:19:06 GMT</pubDate></item><item><title>查看操作系统中所有的共享内存</title><link>https://samsonwang.github.io/blog/posts/2020/list-shared-memory-in-system/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
最近在开发一个基于共享内存的跨平台数据缓存组件，核心思想是将数据存放在共享内存中以实现多进程间数据交换。在开发和调试过程中需要借助工具查看系统中的共享内存。本文记录了Linux和Windows下查看共享内存状态信息的方法。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.github.io/blog/posts/2020/list-shared-memory-in-system/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><category>shared memory</category><category>windows</category><guid>https://samsonwang.github.io/blog/posts/2020/list-shared-memory-in-system/</guid><pubDate>Fri, 14 Aug 2020 02:40:12 GMT</pubDate></item><item><title>栈溢出问题和chkstk</title><link>https://samsonwang.github.io/blog/posts/2020/stackoverflow-and-chkstk/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
最近在调试程序时遇到了一个栈溢出的问题，栈溢出通常是由程序错误引起的，通过修正程序的bug就能解决问题。但是这次的栈溢出，从代码上看并没有错误，经过一番排查和调试，我找到了解决问题的方法，同时也加深了对操作系统中一些概念的理解。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.github.io/blog/posts/2020/stackoverflow-and-chkstk/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>c</category><category>chkstk</category><category>cpp</category><category>stack overflow</category><category>windows</category><guid>https://samsonwang.github.io/blog/posts/2020/stackoverflow-and-chkstk/</guid><pubDate>Sun, 10 May 2020 06:08:32 GMT</pubDate></item><item><title>MSVC的stdio版本适配问题</title><link>https://samsonwang.github.io/blog/posts/2020/msvc-legacy-stdio/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
windows系统的向下兼容性一直是做的比较好的，一些老旧软件不需要修改就能跑在最新版的windows上。这篇文章主要讨论的是库（library）的向下兼容性，在开发中某些库可能是由较老的编译器生成的，当使用新版本的编译器进行链接时可能需要对stdio相关库进行适配。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.github.io/blog/posts/2020/msvc-legacy-stdio/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>c</category><category>cpp</category><category>msvc</category><category>ucrt</category><category>vcrt</category><category>windows</category><guid>https://samsonwang.github.io/blog/posts/2020/msvc-legacy-stdio/</guid><pubDate>Sun, 03 May 2020 01:54:38 GMT</pubDate></item><item><title>Windows平台下System32和SysWOW64文件夹</title><link>https://samsonwang.github.io/blog/posts/2020/windows-system32-and-syswow64/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
在64位的Windows操作系统下，你会发现在System32目录存放的是64位的程序，而SysWOW64目录存放的是32位的程序。本文围绕着这个进行了展开，介绍了Window系统32位和64位的相关知识。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.github.io/blog/posts/2020/windows-system32-and-syswow64/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>32bit</category><category>64bit</category><category>sysnative</category><category>system32</category><category>syswow64</category><category>windows</category><guid>https://samsonwang.github.io/blog/posts/2020/windows-system32-and-syswow64/</guid><pubDate>Tue, 14 Apr 2020 14:21:54 GMT</pubDate></item><item><title>Qt程序中OLE错误的调试记录</title><link>https://samsonwang.github.io/blog/posts/2020/debug-qt-ole-error/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
最近解决了一个Launchy的 &lt;a href="https://github.com/samsonwang/LaunchyQt/issues/22"&gt;bug&lt;/a&gt; ，通过剪贴版向excel拷贝内容时会报OLE错误。我认为这个bug的排查过程比较有意义，在此记录下来。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.github.io/blog/posts/2020/debug-qt-ole-error/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>cpp</category><category>ole</category><category>qt</category><category>windows</category><guid>https://samsonwang.github.io/blog/posts/2020/debug-qt-ole-error/</guid><pubDate>Sat, 08 Feb 2020 01:37:33 GMT</pubDate></item><item><title>Windows常用命令行指令dumpbin</title><link>https://samsonwang.github.io/blog/posts/2019/windows-command-examples-dumpbin/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
在Windows平台下，dumpbin是一个非常有用的命令行工具，主要用于查看可执行程序和动态库的内部信息。本文总结了dumpbin的几种常见用法，方便以后查阅。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.github.io/blog/posts/2019/windows-command-examples-dumpbin/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>coff</category><category>dumpbin</category><category>windows</category><guid>https://samsonwang.github.io/blog/posts/2019/windows-command-examples-dumpbin/</guid><pubDate>Fri, 27 Dec 2019 10:25:23 GMT</pubDate></item></channel></rss>