<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/blog/assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hack Note (Posts about memory barrier)</title><link>https://samsonwang.github.io/blog/</link><description></description><atom:link href="https://samsonwang.github.io/blog/tags/memory-barrier.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2017-2025 &lt;a href="mailto:wangzhilv@gmail.com"&gt;Samson Wang&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/"&gt;
&lt;img alt="cc-by-nc 4.0" style="padding-bottom:2px" src="/images/cc-by-nc.png" /&gt;&lt;/a&gt;
</copyright><lastBuildDate>Wed, 07 May 2025 01:21:29 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>GCC的内存原子化操作函数接口</title><link>https://samsonwang.github.io/blog/posts/2018/gcc-built-in-functions-for-atomic-memory-access/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div id="outline-container-org01053f0" class="outline-2"&gt;
&lt;h2 id="org01053f0"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; 原子化操作&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
在并发编程中，一个操作或一组操作是原子操作、可线性化操作、不可分操作或不可中断操作（atomic, linearizable, indivisible, uniterruptible），表示该操作执行时不可被中断的。操作的原子性能够保证操作在执行时免受中断、信号、并发进程线程的影响。另外，原子操作大多只有两种结果，要么成功并改变系统中对应的状态，要么没有相关效果。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.github.io/blog/posts/2018/gcc-built-in-functions-for-atomic-memory-access/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><category>atomic</category><category>gcc</category><category>linux</category><category>memory barrier</category><guid>https://samsonwang.github.io/blog/posts/2018/gcc-built-in-functions-for-atomic-memory-access/</guid><pubDate>Mon, 02 Jul 2018 09:54:08 GMT</pubDate></item></channel></rss>