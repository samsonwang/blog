<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hack Note (Posts about cheatsheet)</title><link>https://samsonwang.me/</link><description></description><atom:link href="https://samsonwang.me/tags/cheatsheet.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2017-2019 &lt;a href="mailto:wangzhilv@gmail.com"&gt;Samson Wang&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/"&gt;&lt;img alt="知识共享许可协议" style="padding-bottom:2px" src="https://i.creativecommons.org/l/by-nc/4.0/80x15.png" /&gt;&lt;/a&gt;
</copyright><lastBuildDate>Tue, 22 Jan 2019 10:08:53 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>常用git操作备忘</title><link>https://samsonwang.me/posts/git-cheatsheet/</link><dc:creator>Samson Wang</dc:creator><description>&lt;p&gt;
update: 2018-02-15&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
对常用指令进行总结，方便以后遇到相同情况时查阅。&lt;br&gt;
&lt;/p&gt;
&lt;div id="outline-container-orgd03419b" class="outline-2"&gt;
&lt;h2 id="orgd03419b"&gt;1 撤销与回退相关&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd03419b"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgfea966e" class="outline-3"&gt;
&lt;h3 id="orgfea966e"&gt;1.1 修正最近的提交消息&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgfea966e"&gt;
&lt;p&gt;
&lt;b&gt;情景&lt;/b&gt; ：在最近的一次提交（ &lt;code&gt;git commit&lt;/code&gt; ）中输入的信息有误，并且这次提交没有被推送（ &lt;code&gt;git push&lt;/code&gt; ）到远程仓库。&lt;br&gt;
&lt;b&gt;方法&lt;/b&gt; ： &lt;code&gt;git commit --amend&lt;/code&gt; 或 &lt;code&gt;git commit --amend -m "correct_message"&lt;/code&gt;&lt;br&gt;
&lt;b&gt;说明&lt;/b&gt; ： &lt;code&gt;git commit --amend&lt;/code&gt; 会使用一个新的提交更新并替换最近的一次提交，如果有在临时区域（staged）的修改，也会合并提交；如果有新的提交信息，则会一并提交。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org72de91e" class="outline-3"&gt;
&lt;h3 id="org72de91e"&gt;1.2 撤销本地变更&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org72de91e"&gt;
&lt;p&gt;
&lt;b&gt;情景&lt;/b&gt; ：当无意中修改了一个文件，想要回退这个文件的修改时。&lt;br&gt;
&lt;b&gt;方法&lt;/b&gt; ： &lt;code&gt;git checkout -- &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;b&gt;说明&lt;/b&gt; ：这条指令会把该文件回退到某个git记录中的版本，git默认会回退到 &lt;code&gt;HEAD&lt;/code&gt; 版本。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org35213c7" class="outline-3"&gt;
&lt;h3 id="org35213c7"&gt;1.3 重置本地修改&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org35213c7"&gt;
&lt;p&gt;
&lt;b&gt;情景&lt;/b&gt; ：已经进行了多次提交，但是没有推送到版本库中，希望撤销这些提交。&lt;br&gt;
&lt;b&gt;方法&lt;/b&gt; ： &lt;code&gt;git reset &amp;lt;last good SHA&amp;gt;&lt;/code&gt; 或 &lt;code&gt;git reset --hard &amp;lt;last good SHA&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;b&gt;说明&lt;/b&gt; ： &lt;code&gt;git reset&lt;/code&gt; 会把本地代码恢复到没有提交（ &lt;code&gt;git commit&lt;/code&gt; ）的状态，做出的修改会保留。 &lt;code&gt;git reset --hard&lt;/code&gt; 会把这些修改丢弃掉。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org3775dfe" class="outline-3"&gt;
&lt;h3 id="org3775dfe"&gt;1.4 恢复被重置的本地修改&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org3775dfe"&gt;
&lt;p&gt;
&lt;b&gt;情景&lt;/b&gt; ：在按照1.3中操作后，想恢复重置以前的状态。&lt;br&gt;
&lt;b&gt;方法&lt;/b&gt; ： &lt;code&gt;git reflog&lt;/code&gt; 后执行 &lt;code&gt;git reset&lt;/code&gt; 或 &lt;code&gt;git checkout&lt;/code&gt;&lt;br&gt;
&lt;b&gt;说明&lt;/b&gt; ： &lt;code&gt;git reflog&lt;/code&gt; 会呈现所有提交过的历史，是一个十分实用的功能。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org2eb3676" class="outline-2"&gt;
&lt;h2 id="org2eb3676"&gt;2 分支操作相关&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org2eb3676"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc5f6a58" class="outline-3"&gt;
&lt;h3 id="orgc5f6a58"&gt;2.1 创建一个本地分支并推送到远端&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgc5f6a58"&gt;
&lt;p&gt;
&lt;b&gt;方法&lt;/b&gt; ：&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git branch branch_name
git push origin branch_name
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org498d1ee" class="outline-3"&gt;
&lt;h3 id="org498d1ee"&gt;2.2 在本地创建一个远程分支&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org498d1ee"&gt;
&lt;p&gt;
&lt;b&gt;方法&lt;/b&gt; ：&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git fetch origin
git checkout -b  branch_name origin/branch_name
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgcc1ab18" class="outline-3"&gt;
&lt;h3 id="orgcc1ab18"&gt;2.3 在分支上进行进度迁移&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgcc1ab18"&gt;
&lt;p&gt;
&lt;b&gt;情景&lt;/b&gt; ： 进行了几次提交后，发现自己正在错误的分支上干活。&lt;br&gt;
&lt;b&gt;方法&lt;/b&gt; ：&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git branch feature
git reset --hard origin/master
git checkout feature
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
&lt;b&gt;原理&lt;/b&gt; ： 使用feature分支复制了当前分支，将当前分支回退到初始状态，在feature分支上接着干活。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org6467278" class="outline-2"&gt;
&lt;h2 id="org6467278"&gt;3 git submodule 相关操作&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6467278"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0bef5d9" class="outline-3"&gt;
&lt;h3 id="org0bef5d9"&gt;3.1 向当前repo中增加一个submodule&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0bef5d9"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git submoudle add &amp;lt;module url&amp;gt; &amp;lt;local path&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgb1563d9" class="outline-3"&gt;
&lt;h3 id="orgb1563d9"&gt;3.2 初始化submodule&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgb1563d9"&gt;
&lt;p&gt;
在将一个具有submodule的repo拉取到本地以后需要对submodule进行初始化&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git submodule init
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orge96f7da" class="outline-3"&gt;
&lt;h3 id="orge96f7da"&gt;3.3 更新submodule&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orge96f7da"&gt;
&lt;p&gt;
在开发中可以直接进入submodule的目录对每一个submodule执行更新操作，也可以使用命令统一完成submodule的更新操作。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git submodule update
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org6e391c8" class="outline-3"&gt;
&lt;h3 id="org6e391c8"&gt;3.4 删掉submodule&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org6e391c8"&gt;
&lt;p&gt;
对于不需要的submodule，可以将其删掉。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git submodule rm &amp;lt;local/path&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orge0b819d" class="outline-2"&gt;
&lt;h2 id="orge0b819d"&gt;终端配置&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orge0b819d"&gt;
&lt;p&gt;
使用命令简称方便操作&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# git related
alias g='git status --short -b'
alias ga='git add'
alias gb='git branch'
alias gc='git commit -m'
alias gd='git diff'
alias gco='git checkout'
alias gps='git push'
alias gpl='git pull'
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>cheatsheet</category><category>git</category><guid>https://samsonwang.me/posts/git-cheatsheet/</guid><pubDate>Fri, 19 Jan 2018 04:39:16 GMT</pubDate></item></channel></rss>