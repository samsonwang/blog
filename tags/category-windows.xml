<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hack Note (Posts about windows)</title><link>https://blog.wangzhl.com/</link><description></description><atom:link href="https://blog.wangzhl.com/tags/category-windows.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2017-2021 &lt;a href="mailto:wangzhilv@gmail.com"&gt;Samson Wang&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/"&gt;
&lt;img alt="cc-by-nc 4.0" style="padding-bottom:2px" src="/images/cc-by-nc.png" /&gt;&lt;/a&gt;
</copyright><lastBuildDate>Mon, 31 May 2021 06:51:54 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>MSVC的stdio版本适配问题</title><link>https://blog.wangzhl.com/posts/2020/msvc-legacy-stdio/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
windows系统的向下兼容性一直是做的比较好的，一些老旧软件不需要修改就能跑在最新版的windows上。这篇文章主要讨论的是库（library）的向下兼容性，在开发中某些库可能是由较老的编译器生成的，当使用新版本的编译器进行链接时可能需要对stdio相关库进行适配。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.wangzhl.com/posts/2020/msvc-legacy-stdio/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>c</category><category>cpp</category><category>msvc</category><category>ucrt</category><category>vcrt</category><category>windows</category><guid>https://blog.wangzhl.com/posts/2020/msvc-legacy-stdio/</guid><pubDate>Sun, 03 May 2020 01:54:38 GMT</pubDate></item><item><title>Windows平台下System32和SysWOW64文件夹</title><link>https://blog.wangzhl.com/posts/2020/windows-system32-and-syswow64/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
在64位的Windows操作系统下，你会发现在System32目录存放的是64位的程序，而SysWOW64目录存放的是32位的程序。本文围绕着这个进行了展开，介绍了Window系统32位和64位的相关知识。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.wangzhl.com/posts/2020/windows-system32-and-syswow64/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>32bit</category><category>64bit</category><category>sysnative</category><category>system32</category><category>syswow64</category><category>windows</category><guid>https://blog.wangzhl.com/posts/2020/windows-system32-and-syswow64/</guid><pubDate>Tue, 14 Apr 2020 14:21:54 GMT</pubDate></item><item><title>Qt程序中OLE错误的调试记录</title><link>https://blog.wangzhl.com/posts/2020/debug-qt-ole-error/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
最近解决了一个Launchy的 &lt;a href="https://github.com/samsonwang/LaunchyQt/issues/22"&gt;bug&lt;/a&gt; ，通过剪贴版向excel拷贝内容时会报OLE错误。我认为这个bug的排查过程比较有意义，在此记录下来。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.wangzhl.com/posts/2020/debug-qt-ole-error/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>cpp</category><category>ole</category><category>qt</category><category>windows</category><guid>https://blog.wangzhl.com/posts/2020/debug-qt-ole-error/</guid><pubDate>Sat, 08 Feb 2020 01:37:33 GMT</pubDate></item><item><title>Windows常用命令行指令dumpbin</title><link>https://blog.wangzhl.com/posts/2019/windows-command-examples-dumpbin/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
在Windows平台下，dumpbin是一个非常有用的命令行工具，主要用于查看可执行程序和动态库的内部信息。本文总结了dumpbin的几种常见用法，方便以后查阅。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.wangzhl.com/posts/2019/windows-command-examples-dumpbin/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>coff</category><category>dumpbin</category><category>windows</category><guid>https://blog.wangzhl.com/posts/2019/windows-command-examples-dumpbin/</guid><pubDate>Fri, 27 Dec 2019 10:25:23 GMT</pubDate></item><item><title>windows平台下的C++开发框架</title><link>https://blog.wangzhl.com/posts/2018/cpp-development-framework-on-windows/</link><dc:creator>Samson Wang</dc:creator><description>&lt;p&gt;
在开发windows应用程序时，经常会遇到win32、mfc、atl的函数。下面就对三种API（或者说是开发框架）进行了总结。&lt;br&gt;
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;Win32开发框架&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
win32开发框架是最基础的函数接口，更接近操作系统底层。&lt;br&gt;
使用Win32接口的优点是程序的依赖最小，生成的可执行文件的体积也最小。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;MFC开发框架&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
MFC是Microsoft Foundation Class的缩写，将win32的相关接口按照OOP的思想封装了起来，目的是提供一个快速开发原生应用的框架。&lt;br&gt;
使用MFC开发的程序体型略显臃肿，而且MFC也比较陈旧了，并不推荐使用MFC进行开发。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;ATL开发框架&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
ATL是Active Template Library的缩写，是针对COM组件的开发实现的一套开发框架。ATL简化了ActiveX COM组件的开发。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>atl</category><category>cpp</category><category>mfc</category><category>win32</category><category>windows</category><guid>https://blog.wangzhl.com/posts/2018/cpp-development-framework-on-windows/</guid><pubDate>Wed, 07 Feb 2018 14:56:21 GMT</pubDate></item></channel></rss>