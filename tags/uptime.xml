<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hack Note (Posts about uptime)</title><link>https://blog.wangzhl.com/</link><description></description><atom:link href="https://blog.wangzhl.com/tags/uptime.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2017-2024 &lt;a href="mailto:wangzhilv@gmail.com"&gt;Samson Wang&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/"&gt;
&lt;img alt="cc-by-nc 4.0" style="padding-bottom:2px" src="/images/cc-by-nc.png" /&gt;&lt;/a&gt;
</copyright><lastBuildDate>Thu, 18 Jan 2024 09:54:43 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Linux常用命令行指令 - top</title><link>https://blog.wangzhl.com/posts/2018/linux-command-examples-top/</link><dc:creator>Samson Wang</dc:creator><description>&lt;p&gt;
linux的top命令能够动态显示当前系统的运行状态。它能够显示操作系统的汇总信息和当前系统上的正在运行的进程列表。&lt;br&gt;
&lt;/p&gt;

&lt;div id="outline-container-orgc68ce05" class="outline-2"&gt;
&lt;h2 id="orgc68ce05"&gt;统计信息说明&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc68ce05"&gt;
&lt;p&gt;
(可以通过配置文件修改通计信息区的显示格式，下文所描述的都是在默认配置下的显示内容)&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4c2f1da" class="outline-3"&gt;
&lt;h3 id="org4c2f1da"&gt;第1行&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org4c2f1da"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;当前系统时间&lt;br&gt;&lt;/li&gt;
&lt;li&gt;当前系统的启动时长&lt;br&gt;&lt;/li&gt;
&lt;li&gt;当前登录的用户数量&lt;br&gt;&lt;/li&gt;
&lt;li&gt;当前系统的平均负载（分别是1min,5min,10min的平均负载）&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
这一行信息也可以通过 &lt;code&gt;uptime&lt;/code&gt; 和 &lt;code&gt;w&lt;/code&gt; 指令获得&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1c53fbd" class="outline-3"&gt;
&lt;h3 id="org1c53fbd"&gt;第2行&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org1c53fbd"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;总进程数&lt;br&gt;&lt;/li&gt;
&lt;li&gt;正在运行的进程数&lt;br&gt;&lt;/li&gt;
&lt;li&gt;休眠的进程数&lt;br&gt;&lt;/li&gt;
&lt;li&gt;停止的进程数&lt;br&gt;&lt;/li&gt;
&lt;li&gt;僵尸进程数&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7be7ed6" class="outline-3"&gt;
&lt;h3 id="org7be7ed6"&gt;第3行&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org7be7ed6"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;us 用户空间占用CPU百分比&lt;br&gt;&lt;/li&gt;
&lt;li&gt;sy 内核空间占用CPU百分比&lt;br&gt;&lt;/li&gt;
&lt;li&gt;ni 用户进程空间内改变过优先级的进程占用CPU百分比&lt;br&gt;&lt;/li&gt;
&lt;li&gt;id 空闲CPU百分比&lt;br&gt;&lt;/li&gt;
&lt;li&gt;wa 等待输入输出的CPU时间百分比&lt;br&gt;&lt;/li&gt;
&lt;li&gt;hi CPU服务于硬件中断所耗费的时间总额&lt;br&gt;&lt;/li&gt;
&lt;li&gt;si CPU服务软中断所耗费的时间总额&lt;br&gt;&lt;/li&gt;
&lt;li&gt;st Steal time 虚拟机被hypervisor偷去的CPU时间（如果当前处于一个hypervisor下的vm，实际上hypervisor也是要消耗一部分CPU处理时间的）&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org704a5b4" class="outline-3"&gt;
&lt;h3 id="org704a5b4"&gt;第4行&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org704a5b4"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;物理内存总量&lt;br&gt;&lt;/li&gt;
&lt;li&gt;使用的物理内存总量&lt;br&gt;&lt;/li&gt;
&lt;li&gt;空闲内存总量&lt;br&gt;&lt;/li&gt;
&lt;li&gt;用作内核缓存的内存量&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org61ec44b" class="outline-3"&gt;
&lt;h3 id="org61ec44b"&gt;第5行&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org61ec44b"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;交换区总量&lt;br&gt;&lt;/li&gt;
&lt;li&gt;使用的交换区总量&lt;br&gt;&lt;/li&gt;
&lt;li&gt;空间交换区总量&lt;br&gt;&lt;/li&gt;
&lt;li&gt;缓冲交换区总量&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgef2a9b9" class="outline-2"&gt;
&lt;h2 id="orgef2a9b9"&gt;进程信息&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgef2a9b9"&gt;
&lt;p&gt;
在top命令中按f按可以查看显示的列信息，按对应字母来开启/关闭列，大写字母表示开启，小写字母表示关闭。带*号的是默认列。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
A: PID = (Process Id) 进程Id；&lt;br&gt;
E: USER = (User Name) 进程所有者的用户名；&lt;br&gt;
H: PR = (Priority) 优先级&lt;br&gt;
I: NI = (Nice value) nice值。负值表示高优先级，正值表示低优先级&lt;br&gt;
O: VIRT = (Virtual Image (kb)) 进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES&lt;br&gt;
Q: RES = (Resident size (kb)) 进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA&lt;br&gt;
T: SHR = (Shared Mem size (kb)) 共享内存大小，单位kb&lt;br&gt;
W: S = (Process Status) 进程状态。D=不可中断的睡眠状态,R=运行,S=睡眠,T=跟踪/停止,Z=僵尸进程&lt;br&gt;
K: %CPU = (CPU usage) 上次更新到现在的CPU时间占用百分比&lt;br&gt;
N: %MEM = (Memory usage (RES)) 进程使用的物理内存百分比&lt;br&gt;
M: TIME+ = (CPU Time, hundredths) 进程使用的CPU时间总计，单位1/100秒&lt;br&gt;
b: PPID = (Parent Process Pid) 父进程Id&lt;br&gt;
c: RUSER = (Real user name)&lt;br&gt;
d: UID = (User Id) 进程所有者的用户id&lt;br&gt;
f: GROUP = (Group Name) 进程所有者的组名&lt;br&gt;
g: TTY = (Controlling Tty) 启动进程的终端名。不是从终端启动的进程则显示为 ?&lt;br&gt;
j: P = (Last used cpu (SMP)) 最后使用的CPU，仅在多CPU环境下有意义&lt;br&gt;
p: SWAP = (Swapped size (kb)) 进程使用的虚拟内存中，被换出的大小，单位kb&lt;br&gt;
l: TIME = (CPU Time) 进程使用的CPU时间总计，单位秒&lt;br&gt;
r: CODE = (Code size (kb)) 可执行代码占用的物理内存大小，单位kb&lt;br&gt;
s: DATA = (Data+Stack size (kb)) 可执行代码以外的部分(数据段+栈)占用的物理内存大小，单位kb&lt;br&gt;
u: nFLT = (Page Fault count) 页面错误次数&lt;br&gt;
v: nDRT = (Dirty Pages count) 最后一次写入到现在，被修改过的页面数&lt;br&gt;
y: WCHAN = (Sleeping in Function) 若该进程在睡眠，则显示睡眠中的系统函数名&lt;br&gt;
z: Flags = (Task Flags &amp;lt;sched.h&amp;gt;) 任务标志，参考 sched.h&lt;br&gt;
X: COMMAND = (Command name/line) 命令名/命令行&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org5c62d60" class="outline-2"&gt;
&lt;h2 id="org5c62d60"&gt;参考资料&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org5c62d60"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://www.tecmint.com/12-top-command-examples-in-linux/"&gt;tecmint.com&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/sanshiqiduer/article/details/1933625"&gt;csdn blog&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>linux</category><category>shell</category><category>top</category><category>uptime</category><guid>https://blog.wangzhl.com/posts/2018/linux-command-examples-top/</guid><pubDate>Thu, 14 Jun 2018 03:26:53 GMT</pubDate></item></channel></rss>