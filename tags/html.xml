<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hack Note (Posts about html)</title><link>https://samsonwang.me/</link><description></description><atom:link href="https://samsonwang.me/tags/html.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2017-2019 &lt;a href="mailto:wangzhilv@gmail.com"&gt;Samson Wang&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/"&gt;&lt;img alt="知识共享许可协议" style="padding-bottom:2px" src="https://i.creativecommons.org/l/by-nc/4.0/80x15.png" /&gt;&lt;/a&gt;
</copyright><lastBuildDate>Mon, 01 Jul 2019 14:09:55 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>为什么要使用各种前端框架</title><link>https://samsonwang.me/posts/why-front-end-libraries/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div id="outline-container-org67d524f" class="outline-2"&gt;
&lt;h2 id="org67d524f"&gt;引言&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org67d524f"&gt;
&lt;p&gt;
在学习前端的过程中，我开始接触到许多开发框架或开发工具，这些工具让我开始眼花缭乱。使用常规的html/css/js就已经能够开发出这种网页了，所以我问自己，为什么要学习这些框架或工具，这些库是用来解决什么问题的。想明白这个问题，我学习的目的就更加明确，在遇到一些开发情景时，也能够快速准确地挑选出应该使用的框架。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
下面按照我目前的理解，对目前的主流的前端开发库进行一些分析和比较。由于我还是一个初学着，所以我的观点可能还不是很成熟。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgfef26c4" class="outline-2"&gt;
&lt;h2 id="orgfef26c4"&gt;为什么要使用jQuery&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgfef26c4"&gt;
&lt;p&gt;
jQuery是一个轻量级js库，它有如下特性：&lt;br&gt;
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;简化了HTML/DOM操作&lt;br&gt;&lt;/li&gt;
&lt;li&gt;CSS选择器&lt;br&gt;&lt;/li&gt;
&lt;li&gt;动画特效支持&lt;br&gt;&lt;/li&gt;
&lt;li&gt;解决跨浏览器的兼容行问题&lt;br&gt;&lt;/li&gt;
&lt;li&gt;完善的Ajax支持&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
在查阅资料的过程中，我还听到一些主张停用jQuery的声音。原因就在于随着前端开发生态不断的完善，现代浏览器原生API已经足够好用。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9c2ae11" class="outline-2"&gt;
&lt;h2 id="org9c2ae11"&gt;为什么要使用SASS&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9c2ae11"&gt;
&lt;p&gt;
SASS是一种CSS预编译格式，它最终会编译成CSS。&lt;br&gt;
SASS提供了CSS语法的拓展，它支持变量，算数运算符，循环操作，函数操作，样式模板（mixin）等强大的特性。它能够让开发人员更方便地编写CSS。SASS支持 &lt;code&gt;import&lt;/code&gt; 关键字，这样就能够很方便地对样式进行模块化设计。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
加一句题外话，在使用SASS时，需要考虑的另一个问题就是代码物理结构的安排（直白的说就是目录的划分，源文件的存放位置等），这也是所有代码开发中需要注意的问题。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
与SASS相似的工具还有LESS。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org1f6c747" class="outline-2"&gt;
&lt;h2 id="org1f6c747"&gt;为什么要使用Bootstrap&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org1f6c747"&gt;
&lt;p&gt;
Bootstrap是一个用于快速开发网页的前端框架。以我目前的理解来看，它更像是一个网页样式框架。&lt;br&gt;
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;丰富的基础样式和资源&lt;br&gt;&lt;/li&gt;
&lt;li&gt;响应式（responsive），良好的移动端支持&lt;br&gt;&lt;/li&gt;
&lt;li&gt;强大的网格（grid）系统&lt;br&gt;&lt;/li&gt;
&lt;li&gt;一致性，保证跨浏览器的样式一致&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org450a95d" class="outline-2"&gt;
&lt;h2 id="org450a95d"&gt;为什么要使用React&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org450a95d"&gt;
&lt;p&gt;
DOM操作对性能的影响很大，频繁的DOM操作会使网页渲染的速度变慢，React主要解决了这个问题。&lt;br&gt;
React.js允许在js中编写html，形成Virtual DOM，只在变化进行重新渲染。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
下面的一段文字摘自参考资料中的第5篇文章。&lt;br&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Am I building an app which has lots of DOM interactions, or is it a relatively simple app with relatively few interactions?&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Does my app require a very high browser performance, that any user interactions must immediately be reflected in the UI? Is my data going to change over time, at a high rate?&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Is one user interaction going to affect many other areas/components in the UI?&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Is there a possibility that my app could grow big in the future, and so I would want to write extremely neat, modular front-end JavaScript that is easy to maintain? Would I want to use lots of native JavaScript or would I prefer using a lot of abstractions/methods provided in a framework?&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Would I prefer a framework/library which does not have a high learning curve and which is pretty easy to get started with development?&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;
在使用React之前，问自己这样几个问题，就能够帮助你决定是否需要使用React。&lt;br&gt;
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;所开发的网页应用涉及到很多DOM操作么？&lt;br&gt;&lt;/li&gt;
&lt;li&gt;开发的网页应用需要很高的性能么，这意味着任何用于的操作都要立刻反应在界面上？我的数据变更会很频繁么？&lt;br&gt;&lt;/li&gt;
&lt;li&gt;我开发的应用会在未来逐渐变得复杂么，这样我就需要将前端的js代码模块化？我是否会使用许多原生js特性，是否虚幻使用框架提供的抽象方法&lt;br&gt;&lt;/li&gt;
&lt;li&gt;是否需要一个学习曲线比较平缓的框架，能够方便地上手进行开发？&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-orgd6bab1b" class="outline-2"&gt;
&lt;h2 id="orgd6bab1b"&gt;参考资料&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd6bab1b"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/jquery/jquery_intro.asp"&gt;w3schools jQuery intro&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nefe/You-Dont-Need-jQuery"&gt;github you don't need jQuery&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mugo.ca/Blog/7-benefits-of-using-SASS-over-conventional-CSS"&gt;7 benefits of SASS&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.devsaran.com/blog/10-best-reasons-use-bootstrap-amazing-web-designs"&gt;10 best reasons to use bootstrap&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scotch.io/@anitashah/what-problems-does-reactjs-solve-when-must-you-select-reactjs"&gt;what problems does reactjs solve&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>css</category><category>front-end</category><category>html</category><category>javascript</category><guid>https://samsonwang.me/posts/why-front-end-libraries/</guid><pubDate>Mon, 27 Aug 2018 14:10:35 GMT</pubDate></item></channel></rss>