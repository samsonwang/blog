<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hack Note (Posts about design pattern)</title><link>https://blog.wangzhl.com/</link><description></description><atom:link href="https://blog.wangzhl.com/tags/category-design-pattern.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2017-2020 &lt;a href="mailto:wangzhilv@gmail.com"&gt;Samson Wang&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/"&gt;
&lt;img alt="cc-by-nc 4.0" style="padding-bottom:2px" src="/images/cc-by-nc.png" /&gt;&lt;/a&gt;
</copyright><lastBuildDate>Wed, 13 May 2020 07:50:23 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>网络编程中的Reactor和Proactor模式</title><link>https://blog.wangzhl.com/posts/network-programming-reactor-and-proactor/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
本文介绍了两种常用的网络编程模式：Reactor模式和Proactor模式。这两种设计模式比较相似，它们的典型应用案例都是处理网络编程的并发请求，但是它们在具体的请求分派方式上又有区别。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.wangzhl.com/posts/network-programming-reactor-and-proactor/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>design pattern</category><category>network</category><category>proactor</category><category>reactor</category><guid>https://blog.wangzhl.com/posts/network-programming-reactor-and-proactor/</guid><pubDate>Sun, 15 Mar 2020 11:58:43 GMT</pubDate></item></channel></rss>