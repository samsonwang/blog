<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/blog/assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hack Note (Posts about git)</title><link>https://samsonwang.github.io/blog/</link><description></description><atom:link href="https://samsonwang.github.io/blog/tags/git.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2017-2025 &lt;a href="mailto:wangzhilv@gmail.com"&gt;Samson Wang&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/"&gt;
&lt;img alt="cc-by-nc 4.0" style="padding-bottom:2px" src="/images/cc-by-nc.png" /&gt;&lt;/a&gt;
</copyright><lastBuildDate>Wed, 07 May 2025 01:21:27 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>在git中撤回最后一次本地提交</title><link>https://samsonwang.github.io/blog/posts/2020/git-undo-last-local-commit/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
有时候在git中进行了一次提交，这次提交还没有被推送到服务器上，如果这时发现了一些错误，想进行修正怎么办？本文记录了撤回这次提交的步骤，以备不时之需。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.github.io/blog/posts/2020/git-undo-last-local-commit/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>cheatsheet</category><category>git</category><category>tips</category><guid>https://samsonwang.github.io/blog/posts/2020/git-undo-last-local-commit/</guid><pubDate>Sun, 29 Mar 2020 08:42:24 GMT</pubDate></item><item><title>为git设置socks5代理</title><link>https://samsonwang.github.io/blog/posts/2018/use-git-with-socks5-proxy/</link><dc:creator>Samson Wang</dc:creator><description>&lt;p&gt;
在某些时候，为了绕过网络封锁，在使用git时需要借助代理完成相关网络操作。&lt;br&gt;
&lt;/p&gt;

&lt;div id="outline-container-orgeaff0de" class="outline-2"&gt;
&lt;h2 id="orgeaff0de"&gt;一个可用的VPN代理是先决条件&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgeaff0de"&gt;
&lt;p&gt;
关于VPN的架设就不在此讨论了。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgae73d2e" class="outline-2"&gt;
&lt;h2 id="orgae73d2e"&gt;将repo的链接由ssh改为为https&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgae73d2e"&gt;
&lt;p&gt;
已经使用https的repo跳过此步骤。&lt;br&gt;
本教程需要通过https（http）的方式使用代理，所以如果现有的repo是使用ssh方式clone到本地的，需要修改其为https方式。&lt;br&gt;
需要修改 &lt;code&gt;repo_name/.git/config&lt;/code&gt; 中的url配置，将其中的git格式改为https格式。使用文本编辑工具将其打开进行修改，以github为例，需要将 &lt;code&gt;git@github.com:user_name/repo_name.git&lt;/code&gt; 改为 &lt;code&gt;https://github.com/user_name/repo_name.git&lt;/code&gt; 。&lt;br&gt;
可以使用sed指令完成替换。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sed -i 's/git@github.com:/git:\/\/github.com\//' ./.git/config
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgd26d1c4" class="outline-2"&gt;
&lt;h2 id="orgd26d1c4"&gt;设置git使用代理&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd26d1c4"&gt;
&lt;p&gt;
将git配置为使用socks5代理，以socks5的ip和端口是 &lt;code&gt;127.0.0.1:1080&lt;/code&gt; 为例。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git config --global http.proxy 'socks5://127.0.0.1:1080'
git config --global https.proxy 'socks5://127.0.0.1:1080'
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org67fd556" class="outline-2"&gt;
&lt;h2 id="org67fd556"&gt;将登录信息缓存下来&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org67fd556"&gt;
&lt;p&gt;
使用https时，在向远程仓库进行推送（git push）时会要求验证用户名和密码，由于每次都输入验证信息是十分繁琐的，考虑将验证信息缓存下来。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git config --global credential.helper cache
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
git默认会将密码缓存15分钟，在这期间进行的操作是不需要再次进行密码验证的，可以使用下面命令修改缓存的时长。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git config --global credential.helper "cache --timeout=3600"
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org48bbf16" class="outline-2"&gt;
&lt;h2 id="org48bbf16"&gt;将登陆信息保存下来&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org48bbf16"&gt;
&lt;p&gt;
也可以考虑将用户名和密码永久保存下来，这样就不需要再次进行密码验证了。&lt;br&gt;
&lt;b&gt;注意:&lt;/b&gt; 使用这种配置会将明文的账户和密码保存在 &lt;code&gt;~/.git-cretidentials&lt;/code&gt; 文件中，所以仅推荐在个人电脑中使用这个配置。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git config --global credential.helper store
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org364c2ac" class="outline-2"&gt;
&lt;h2 id="org364c2ac"&gt;参考资料&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org364c2ac"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/5343068/is-there-a-way-to-skip-password-typing-when-using-https-on-github"&gt;stackoverflow question&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
（全文完）&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>git</category><category>socks5</category><category>vpn</category><guid>https://samsonwang.github.io/blog/posts/2018/use-git-with-socks5-proxy/</guid><pubDate>Thu, 08 Feb 2018 01:26:07 GMT</pubDate></item><item><title>常用git操作备忘</title><link>https://samsonwang.github.io/blog/posts/2018/git-cheatsheet/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
对常用指令进行总结，方便以后遇到相同情况时查阅。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://samsonwang.github.io/blog/posts/2018/git-cheatsheet/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>cheatsheet</category><category>git</category><guid>https://samsonwang.github.io/blog/posts/2018/git-cheatsheet/</guid><pubDate>Fri, 19 Jan 2018 04:39:16 GMT</pubDate></item></channel></rss>