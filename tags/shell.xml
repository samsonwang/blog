<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hack Note (Posts about shell)</title><link>https://blog.wangzhl.com/</link><description></description><atom:link href="https://blog.wangzhl.com/tags/shell.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2017-2021 &lt;a href="mailto:wangzhilv@gmail.com"&gt;Samson Wang&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/"&gt;
&lt;img alt="cc-by-nc 4.0" style="padding-bottom:2px" src="/images/cc-by-nc.png" /&gt;&lt;/a&gt;
</copyright><lastBuildDate>Fri, 30 Jul 2021 06:31:36 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>为指定目录和文件创建gtags</title><link>https://blog.wangzhl.com/posts/gtags-for-specified-files-and-directories/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
GNU Global 是一个非常好用的代码索引工具，我在emacs中使用它进行代码跳转，本文介绍了使用中的一个小技巧。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.wangzhl.com/posts/gtags-for-specified-files-and-directories/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>find</category><category>global</category><category>gtags</category><category>shell</category><guid>https://blog.wangzhl.com/posts/gtags-for-specified-files-and-directories/</guid><pubDate>Mon, 14 Dec 2020 14:34:26 GMT</pubDate></item><item><title>Linux 常用的排查故障指令</title><link>https://blog.wangzhl.com/posts/linux-troubleshooting-commands/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
本文总结了常用的排查 linux 服务器故障的命令行指令，这些指令能够查看操作系统的实时状态信息，在排查问题时起到辅助作用。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.wangzhl.com/posts/linux-troubleshooting-commands/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><category>shell</category><category>troubleshooting</category><guid>https://blog.wangzhl.com/posts/linux-troubleshooting-commands/</guid><pubDate>Sat, 30 Nov 2019 09:22:35 GMT</pubDate></item><item><title>在shell中使用正则表达式</title><link>https://blog.wangzhl.com/posts/using-regexp-in-linux-shell/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div id="outline-container-org3982503" class="outline-2"&gt;
&lt;h2 id="org3982503"&gt;引言&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3982503"&gt;
&lt;p&gt;
本篇文章主要是针对shell中的 &lt;code&gt;grep&lt;/code&gt; 和 &lt;code&gt;egrep&lt;/code&gt; 的讲解，对于正则表达式的规则本身并没有太多的内容。在阅读本篇文章之前，读者应该对正则表达式有个大致的了解。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgc91df1a" class="outline-2"&gt;
&lt;h2 id="orgc91df1a"&gt;&lt;code&gt;grep&lt;/code&gt; 命令&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc91df1a"&gt;
&lt;p&gt;
&lt;code&gt;grep&lt;/code&gt; 命令是linux终端中最常用的命令之一，它的全称是“global regular expression print”，从字面上理解， &lt;code&gt;grep&lt;/code&gt; 可以用来进行正则表达式匹配。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;常用选项&lt;/b&gt;&lt;br&gt;
使用一些选项命令能够更加方便地进行匹配&lt;br&gt;
&lt;code&gt;-i&lt;/code&gt; 忽略大小写&lt;br&gt;
&lt;code&gt;-v&lt;/code&gt; 进行逆向匹配&lt;br&gt;
&lt;code&gt;-n&lt;/code&gt; 打印行号&lt;br&gt;
&lt;code&gt;--color=auto&lt;/code&gt; 彩色输出结果&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;支持的表达式&lt;/b&gt;&lt;br&gt;
正则表达式有很多规则， &lt;code&gt;grep&lt;/code&gt; 支持的有如下：&lt;br&gt;
在每一行的开始&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;grep &lt;span class="s2"&gt;"^GUN"&lt;/span&gt; GPL-3
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
在每一行的结尾&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;grep &lt;span class="s2"&gt;"and&lt;/span&gt;$&lt;span class="s2"&gt;"&lt;/span&gt; GPL-3
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
匹配任意字符&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;grep &lt;span class="s2"&gt;"..cept"&lt;/span&gt; GPL-3
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
在指定的字符中进行匹配&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;grep &lt;span class="s2"&gt;"t[wo]o"&lt;/span&gt; GPL-3
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
在指定的字符中进行逆向匹配&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;grep &lt;span class="s2"&gt;"[^c]ode"&lt;/span&gt; GPL-3
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
使用范围来指定字符&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;grep &lt;span class="s2"&gt;"^[A-Z]"&lt;/span&gt; GPL-3
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
限定出现的次数为0次或0次以上&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;grep &lt;span class="s2"&gt;"([A-Za-z ]*)"&lt;/span&gt; GPL-3
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9bd162f" class="outline-2"&gt;
&lt;h2 id="org9bd162f"&gt;&lt;code&gt;egrep&lt;/code&gt; 命令&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9bd162f"&gt;
&lt;p&gt;
&lt;code&gt;egrep&lt;/code&gt; 的含义为“extended grep”，相对于 &lt;code&gt;grep&lt;/code&gt; 有更多的正则表达式特性。同样，可以在使用 &lt;code&gt;grep&lt;/code&gt; 时增加 &lt;code&gt;-E&lt;/code&gt; 参数获得相同的效果。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;表达式分组&lt;/b&gt;&lt;br&gt;
使用括号能够将表达式进行分组，下面的任何一个都能够实现这个效果&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;grep &lt;span class="s2"&gt;"\(grouping\)"&lt;/span&gt; file.txt
grep -E &lt;span class="s2"&gt;"(grouping)"&lt;/span&gt; file.txt
egrep &lt;span class="s2"&gt;"(grouping)"&lt;/span&gt; file.txt
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
表达式进行中多选一&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;egrep &lt;span class="s2"&gt;"(GPL|General Public License)"&lt;/span&gt; GPL-3
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
匹配的重复次数为0次或0次以上，与 &lt;code&gt;*&lt;/code&gt; 限定符类似，但是 &lt;code&gt;?&lt;/code&gt; 可以作用于一组字符&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;egrep &lt;span class="s2"&gt;"(copy)?right"&lt;/span&gt; GPL-3
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
指定匹配的重复次数&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;egrep &lt;span class="s2"&gt;"[AEIOUaeiou]{3}"&lt;/span&gt; GPL-3
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org4c2fb18" class="outline-2"&gt;
&lt;h2 id="org4c2fb18"&gt;参考资料&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4c2fb18"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/using-grep-regular-expressions-to-search-for-text-patterns-in-linux"&gt;digital ocean - grep tutorial&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://man7.org/linux/man-pages/man1/grep.1.html"&gt;linux man page&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>egrep</category><category>grep</category><category>liunx</category><category>shell</category><guid>https://blog.wangzhl.com/posts/using-regexp-in-linux-shell/</guid><pubDate>Sun, 16 Sep 2018 01:47:01 GMT</pubDate></item><item><title>shell的输出重定向</title><link>https://blog.wangzhl.com/posts/shell-output-redirections/</link><dc:creator>Samson Wang</dc:creator><description>&lt;div id="outline-container-orgf40702d" class="outline-2"&gt;
&lt;h2 id="orgf40702d"&gt;引言&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf40702d"&gt;
&lt;p&gt;
在linux中借助shell等命令行工具能够很方便地与操作系统交互，可以在shell中将命令或程序的输入结果重定向到特定地方，很方便地实现一些功能。这个技巧十分实用，使用输出重定向能够极大地简化我们的日常操作。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org630769e" class="outline-2"&gt;
&lt;h2 id="org630769e"&gt;使用尖括号完成重定向&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org630769e"&gt;
&lt;p&gt;
示例如下，运行下面的命令能够把 &lt;code&gt;ls&lt;/code&gt; 命令的运行结果写入到 &lt;code&gt;ls-output.txt&lt;/code&gt; 中。使用 &lt;code&gt;&amp;gt;&lt;/code&gt; 会把程序运行时本该输出到 &lt;code&gt;stdout&lt;/code&gt; 的内容重定向到指定名称的文件中。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls . &amp;gt; ls-output.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
可以在 &lt;code&gt;&amp;gt;&lt;/code&gt; 左面写上数字和 &lt;code&gt;&amp;amp;&lt;/code&gt; ，用以标识在重定向时的特殊用法。下面会给出一些特殊用法的实例。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgc11643a" class="outline-3"&gt;
&lt;h3 id="orgc11643a"&gt;重定向 &lt;code&gt;stdout&lt;/code&gt; 到指定文件中&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgc11643a"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls . &lt;span class="m"&gt;1&lt;/span&gt;&amp;gt; ls-output.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org707adde" class="outline-3"&gt;
&lt;h3 id="org707adde"&gt;重定向 &lt;code&gt;stderr&lt;/code&gt; 到指定文件中&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org707adde"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls . &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt; ls-error.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org07cd18e" class="outline-3"&gt;
&lt;h3 id="org07cd18e"&gt;将 &lt;code&gt;stdout&lt;/code&gt; 和 &lt;code&gt;stdout&lt;/code&gt; 合并再重定向到指定文件中&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org07cd18e"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls . &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; ls-output-and-error.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
以下命令具有相同的效果&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls . &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&amp;gt; ls-output-and-error.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org3920b0e" class="outline-3"&gt;
&lt;h3 id="org3920b0e"&gt;将程序的输出丢掉&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org3920b0e"&gt;
&lt;p&gt;
可以将输出重定向到一个特殊的文件 &lt;code&gt;/dev/null&lt;/code&gt; ，所有写入到这个文件的内容都会被丢弃掉。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;program &amp;gt; /dev/null
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgfeda7df" class="outline-3"&gt;
&lt;h3 id="orgfeda7df"&gt;将输出追加到指定文件尾部&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgfeda7df"&gt;
&lt;p&gt;
使用一个尖括号（ &lt;code&gt;&amp;gt;&lt;/code&gt; ）能够将输出重定向到文件中，在写入文件时会覆盖掉其中的内容。如果想保留文件中的原始内容，则可以用两个尖括号（ &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; ），这样就能将输出追加到文件的尾部。示例代码如下：&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;test&lt;/span&gt; &amp;gt;&amp;gt; file-output.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgd190036" class="outline-2"&gt;
&lt;h2 id="orgd190036"&gt;使用管道完成重定向&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd190036"&gt;
&lt;p&gt;
使用管道符号 &lt;code&gt;|&lt;/code&gt; 能够将一个程序的输出重定向到另一个程序的输入中去。下面的命令会将 &lt;code&gt;ls&lt;/code&gt; 的输出（ &lt;code&gt;stdout&lt;/code&gt; ）重定向到 &lt;code&gt;grep&lt;/code&gt; 的输入（ &lt;code&gt;stdin&lt;/code&gt; ）中去。管道命令在linux中是最常见的用法。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls &lt;span class="p"&gt;|&lt;/span&gt; grep &amp;lt;pattern&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>linux</category><category>shell</category><guid>https://blog.wangzhl.com/posts/shell-output-redirections/</guid><pubDate>Thu, 26 Jul 2018 02:02:41 GMT</pubDate></item><item><title>Linux常用命令行指令 - top</title><link>https://blog.wangzhl.com/posts/linux-command-examples-top/</link><dc:creator>Samson Wang</dc:creator><description>&lt;p&gt;
linux的top命令能够动态显示当前系统的运行状态。它能够显示操作系统的汇总信息和当前系统上的正在运行的进程列表。&lt;br&gt;
&lt;/p&gt;

&lt;div id="outline-container-org961c067" class="outline-2"&gt;
&lt;h2 id="org961c067"&gt;统计信息说明&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org961c067"&gt;
&lt;p&gt;
(可以通过配置文件修改通计信息区的显示格式，下文所描述的都是在默认配置下的显示内容)&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-org762aa3e" class="outline-3"&gt;
&lt;h3 id="org762aa3e"&gt;第1行&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org762aa3e"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;当前系统时间&lt;br&gt;&lt;/li&gt;
&lt;li&gt;当前系统的启动时长&lt;br&gt;&lt;/li&gt;
&lt;li&gt;当前登录的用户数量&lt;br&gt;&lt;/li&gt;
&lt;li&gt;当前系统的平均负载（分别是1min,5min,10min的平均负载）&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
这一行信息也可以通过 &lt;code&gt;uptime&lt;/code&gt; 和 &lt;code&gt;w&lt;/code&gt; 指令获得&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb970642" class="outline-3"&gt;
&lt;h3 id="orgb970642"&gt;第2行&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgb970642"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;总进程数&lt;br&gt;&lt;/li&gt;
&lt;li&gt;正在运行的进程数&lt;br&gt;&lt;/li&gt;
&lt;li&gt;休眠的进程数&lt;br&gt;&lt;/li&gt;
&lt;li&gt;停止的进程数&lt;br&gt;&lt;/li&gt;
&lt;li&gt;僵尸进程数&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf1349be" class="outline-3"&gt;
&lt;h3 id="orgf1349be"&gt;第3行&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgf1349be"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;us 用户空间占用CPU百分比&lt;br&gt;&lt;/li&gt;
&lt;li&gt;sy 内核空间占用CPU百分比&lt;br&gt;&lt;/li&gt;
&lt;li&gt;ni 用户进程空间内改变过优先级的进程占用CPU百分比&lt;br&gt;&lt;/li&gt;
&lt;li&gt;id 空闲CPU百分比&lt;br&gt;&lt;/li&gt;
&lt;li&gt;wa 等待输入输出的CPU时间百分比&lt;br&gt;&lt;/li&gt;
&lt;li&gt;hi CPU服务于硬件中断所耗费的时间总额&lt;br&gt;&lt;/li&gt;
&lt;li&gt;si CPU服务软中断所耗费的时间总额&lt;br&gt;&lt;/li&gt;
&lt;li&gt;st Steal time 虚拟机被hypervisor偷去的CPU时间（如果当前处于一个hypervisor下的vm，实际上hypervisor也是要消耗一部分CPU处理时间的）&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org66598a4" class="outline-3"&gt;
&lt;h3 id="org66598a4"&gt;第4行&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org66598a4"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;物理内存总量&lt;br&gt;&lt;/li&gt;
&lt;li&gt;使用的物理内存总量&lt;br&gt;&lt;/li&gt;
&lt;li&gt;空闲内存总量&lt;br&gt;&lt;/li&gt;
&lt;li&gt;用作内核缓存的内存量&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org0119e8d" class="outline-3"&gt;
&lt;h3 id="org0119e8d"&gt;第5行&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0119e8d"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;交换区总量&lt;br&gt;&lt;/li&gt;
&lt;li&gt;使用的交换区总量&lt;br&gt;&lt;/li&gt;
&lt;li&gt;空间交换区总量&lt;br&gt;&lt;/li&gt;
&lt;li&gt;缓冲交换区总量&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org0828cd1" class="outline-2"&gt;
&lt;h2 id="org0828cd1"&gt;进程信息&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org0828cd1"&gt;
&lt;p&gt;
在top命令中按f按可以查看显示的列信息，按对应字母来开启/关闭列，大写字母表示开启，小写字母表示关闭。带*号的是默认列。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
A: PID = (Process Id) 进程Id；&lt;br&gt;
E: USER = (User Name) 进程所有者的用户名；&lt;br&gt;
H: PR = (Priority) 优先级&lt;br&gt;
I: NI = (Nice value) nice值。负值表示高优先级，正值表示低优先级&lt;br&gt;
O: VIRT = (Virtual Image (kb)) 进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES&lt;br&gt;
Q: RES = (Resident size (kb)) 进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA&lt;br&gt;
T: SHR = (Shared Mem size (kb)) 共享内存大小，单位kb&lt;br&gt;
W: S = (Process Status) 进程状态。D=不可中断的睡眠状态,R=运行,S=睡眠,T=跟踪/停止,Z=僵尸进程&lt;br&gt;
K: %CPU = (CPU usage) 上次更新到现在的CPU时间占用百分比&lt;br&gt;
N: %MEM = (Memory usage (RES)) 进程使用的物理内存百分比&lt;br&gt;
M: TIME+ = (CPU Time, hundredths) 进程使用的CPU时间总计，单位1/100秒&lt;br&gt;
b: PPID = (Parent Process Pid) 父进程Id&lt;br&gt;
c: RUSER = (Real user name)&lt;br&gt;
d: UID = (User Id) 进程所有者的用户id&lt;br&gt;
f: GROUP = (Group Name) 进程所有者的组名&lt;br&gt;
g: TTY = (Controlling Tty) 启动进程的终端名。不是从终端启动的进程则显示为 ?&lt;br&gt;
j: P = (Last used cpu (SMP)) 最后使用的CPU，仅在多CPU环境下有意义&lt;br&gt;
p: SWAP = (Swapped size (kb)) 进程使用的虚拟内存中，被换出的大小，单位kb&lt;br&gt;
l: TIME = (CPU Time) 进程使用的CPU时间总计，单位秒&lt;br&gt;
r: CODE = (Code size (kb)) 可执行代码占用的物理内存大小，单位kb&lt;br&gt;
s: DATA = (Data+Stack size (kb)) 可执行代码以外的部分(数据段+栈)占用的物理内存大小，单位kb&lt;br&gt;
u: nFLT = (Page Fault count) 页面错误次数&lt;br&gt;
v: nDRT = (Dirty Pages count) 最后一次写入到现在，被修改过的页面数&lt;br&gt;
y: WCHAN = (Sleeping in Function) 若该进程在睡眠，则显示睡眠中的系统函数名&lt;br&gt;
z: Flags = (Task Flags &amp;lt;sched.h&amp;gt;) 任务标志，参考 sched.h&lt;br&gt;
X: COMMAND = (Command name/line) 命令名/命令行&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org3f1e8e8" class="outline-2"&gt;
&lt;h2 id="org3f1e8e8"&gt;参考资料&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3f1e8e8"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://www.tecmint.com/12-top-command-examples-in-linux/"&gt;tecmint.com&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/sanshiqiduer/article/details/1933625"&gt;csdn blog&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>linux</category><category>shell</category><category>top</category><category>uptime</category><guid>https://blog.wangzhl.com/posts/linux-command-examples-top/</guid><pubDate>Thu, 14 Jun 2018 03:26:53 GMT</pubDate></item><item><title>Linux常用命令行指令 - tcpdump</title><link>https://blog.wangzhl.com/posts/linux-command-examples-tcpdump/</link><dc:creator>Samson Wang</dc:creator><description>&lt;p&gt;
tcpdump常用于网络抓包，能够将抓取的包保存下来，这样就能进一步深入分析。抓包保存的文件可以使用tcpdump进行查看，也可以借助第三方软件（如wireshark）进行辅助分析。&lt;br&gt;
&lt;/p&gt;

&lt;div id="outline-container-org4108ecc" class="outline-2"&gt;
&lt;h2 id="org4108ecc"&gt;1. 抓取指定网络设备上的包&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4108ecc"&gt;
&lt;p&gt;
抓取网卡eth0上的包&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -i eth0
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc4e5373" class="outline-2"&gt;
&lt;h2 id="orgc4e5373"&gt;2. 限制抓包的数量&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc4e5373"&gt;
&lt;p&gt;
只抓取5个包&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -c 5 -i eth0
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org33739f1" class="outline-2"&gt;
&lt;h2 id="org33739f1"&gt;3. 将抓取的包以ASCII的方式打印出来&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org33739f1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -A -i eth0
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4672a7c" class="outline-2"&gt;
&lt;h2 id="org4672a7c"&gt;4. 将抓取的包以十六进制的方式打印出来&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4672a7c"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -XX -i eth0
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc428b46" class="outline-2"&gt;
&lt;h2 id="orgc428b46"&gt;5. 对抓取到的包上打出更方便阅读的时间戳&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc428b46"&gt;
&lt;p&gt;
增加 &lt;code&gt;-t&lt;/code&gt; 参数能够将抓取到的包中的时间以方便阅读的形式打印出来，使用 &lt;code&gt;-tttt&lt;/code&gt; 参数能够将包中的时间戳以更详细的方式打印出来。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -t -i eth0
tcpdump -tttt -i eth0
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org46f8f0e" class="outline-2"&gt;
&lt;h2 id="org46f8f0e"&gt;6. 将抓取的包写入到文件中&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org46f8f0e"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -w netdump.pcap -i eth0
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga337fc2" class="outline-2"&gt;
&lt;h2 id="orga337fc2"&gt;7. 读取抓到的包&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orga337fc2"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -r netdump.pcap
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgce9973d" class="outline-2"&gt;
&lt;h2 id="orgce9973d"&gt;8. 在抓到的包中显示ip地址&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgce9973d"&gt;
&lt;p&gt;
增加 &lt;code&gt;-n&lt;/code&gt; 参数不会解析主机名，增加 &lt;code&gt;-nn&lt;/code&gt; 参数不会解析主机名和端口名&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -n -i eth0
tcpdump -nn -i eth0
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org63f9383" class="outline-2"&gt;
&lt;h2 id="org63f9383"&gt;9. 以绝对值显示包的ISN号&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org63f9383"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -S -i eth0
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org204b18a" class="outline-2"&gt;
&lt;h2 id="org204b18a"&gt;10. 对抓取到的包显示更详细的信息&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org204b18a"&gt;
&lt;p&gt;
参数 &lt;code&gt;-v&lt;/code&gt; 是verbose的缩写，以下命令表示对抓取到的包显示更详细的信息。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -v -i eth0
tcpdump -vv -i eth0
tcpdump -vvv -i eth0
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge2736ca" class="outline-2"&gt;
&lt;h2 id="orge2736ca"&gt;11. 对抓到的包进行协议类型过滤&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orge2736ca"&gt;
&lt;p&gt;
支持的协议类型有：fddi, tr, wlan, ip, ip6, arp, rarp, decnet, tcp, udp&lt;br&gt;
以下命令只会抓取网卡eth0上的arp包&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -i eth0 arp
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7a668bc" class="outline-2"&gt;
&lt;h2 id="org7a668bc"&gt;12. 在抓包时对包进行大小过滤&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7a668bc"&gt;
&lt;p&gt;
下面的命令会分别抓取大于1024字节和小于1024字节的包&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -i eth0 greater 1024
tcpdump -i eth0 less 1024
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org50f4745" class="outline-2"&gt;
&lt;h2 id="org50f4745"&gt;13. 抓取指定端口上的包&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org50f4745"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -i eth0 port 22
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org256ae1c" class="outline-2"&gt;
&lt;h2 id="org256ae1c"&gt;14. 抓取发往指定目的和端口上包&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org256ae1c"&gt;
&lt;p&gt;
可以使用 &lt;code&gt;and&lt;/code&gt; 和 &lt;code&gt;or&lt;/code&gt; 对过滤条件进行组合以实现精确的抓包。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -w net_dump.pcap -i eth0 dst 10.181.140.216 and port 22
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org3844a81" class="outline-2"&gt;
&lt;h2 id="org3844a81"&gt;常用tcpdump命令示例&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3844a81"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump –i any 'port 8888'
tcpdump –i any 'tcp port 8888'
tcpdump –i any 'tcp src port 8888'
tcpdump –i any 'tcp src port 8888 and udp dst port 9999'
tcpdump -i any 'src host 127.0.0.1 and tcp src port 12345' -XX -nn -vv
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orge3d547c" class="outline-2"&gt;
&lt;h2 id="orge3d547c"&gt;参考资料&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orge3d547c"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://danielmiessler.com/study/tcpdump/"&gt;danielmiessler.com tcpdump&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.thegeekstuff.com/2010/08/tcpdump-command-examples/"&gt;thegeekstuff.com tcpdump&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>linux</category><category>network</category><category>shell</category><category>tcpdump</category><guid>https://blog.wangzhl.com/posts/linux-command-examples-tcpdump/</guid><pubDate>Sun, 25 Mar 2018 15:34:53 GMT</pubDate></item><item><title>Linux常用命令行指令 - lsof</title><link>https://blog.wangzhl.com/posts/linux-command-examples-lsof/</link><dc:creator>Samson Wang</dc:creator><description>&lt;p&gt;
lsof是list open files的简称，用于列出系统中所有打开的文件。由于在linux系统下，所有 对象都是文件，所以这个指令十分有用。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
下面就给出了几种常见的用法，需要注意的是有些指令需要root权限执行。&lt;br&gt;
&lt;/p&gt;

&lt;div id="outline-container-org5edc7b8" class="outline-2"&gt;
&lt;h2 id="org5edc7b8"&gt;1. 查看打开指定文件的进程&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org5edc7b8"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsof /var/syslog.log
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgab7c8f0" class="outline-2"&gt;
&lt;h2 id="orgab7c8f0"&gt;2. 查看指定目录下打开的文件&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgab7c8f0"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsof +D /home/
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org53872a6" class="outline-2"&gt;
&lt;h2 id="org53872a6"&gt;3. 查看以指定进程名所有打开的文件&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org53872a6"&gt;
&lt;p&gt;
使用 &lt;code&gt;-c&lt;/code&gt; 命令能够查看指定进程名使用的文件，允许在一个命令行指令中使用多个 &lt;code&gt;-c&lt;/code&gt; 参数。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsof -c procname
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org7c95aee" class="outline-2"&gt;
&lt;h2 id="org7c95aee"&gt;4. 查看使用指定挂载点的进程&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7c95aee"&gt;
&lt;p&gt;
在停止挂载某个目录时，系统会告诉我们“设备资源繁忙”，所以我们需要找出使用挂载点的程序，终止这些进程，解除目录的占用状态。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsof /home
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
或&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsof +D /home/
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org8054907" class="outline-2"&gt;
&lt;h2 id="org8054907"&gt;5. 查看指定用户打开的文件&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org8054907"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsof -u username
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
另外还可以进行反向过滤，在输出中不显示指定用户的文件，语法如下。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsof -u ^username
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org33de0e1" class="outline-2"&gt;
&lt;h2 id="org33de0e1"&gt;6. 查看指定进程打开的文件&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org33de0e1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsof -p pid
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgfdd20d9" class="outline-2"&gt;
&lt;h2 id="orgfdd20d9"&gt;7. 终止属于某个用户的所有进程&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgfdd20d9"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;kill `lsof -t -u username`
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
相似的，可以使用 &lt;code&gt;-t&lt;/code&gt; 参数打印使用某个文件的进程id。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsof -t /var/log
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgef30e57" class="outline-2"&gt;
&lt;h2 id="orgef30e57"&gt;8. 让结果同时满足多个选项&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgef30e57"&gt;
&lt;p&gt;
默认情况下，多个参数是以或（or）进行操作的，可以使用 &lt;code&gt;-a&lt;/code&gt; 选项让结果同时满足多个参数。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsof -a -u username -c procname
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgd6d92bd" class="outline-2"&gt;
&lt;h2 id="orgd6d92bd"&gt;9. 让命令重复执行&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd6d92bd"&gt;
&lt;p&gt;
可以使用 &lt;code&gt;-r&lt;/code&gt; 参数让命令重复执行。以下命令会每隔5s执行一次，每次的执行结果会用 “====” 分割开。&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsof -u username -c procname -a -r5
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org3c4c0af" class="outline-2"&gt;
&lt;h2 id="org3c4c0af"&gt;10. 列出所有的网络连接&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3c4c0af"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsof -i
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
让结果中的ip地址和端口号显示数字而不是英文别名&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsof -i -Pn
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
显示所有的 &lt;code&gt;AF_UNIX&lt;/code&gt; socket&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsof -U
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgd071deb" class="outline-2"&gt;
&lt;h2 id="orgd071deb"&gt;11. 列出指定进程使用的网络连接&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd071deb"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsof -i -a -p pid
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org6166cfe" class="outline-2"&gt;
&lt;h2 id="org6166cfe"&gt;12. 查看指定端口上的监听&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6166cfe"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsof -i :portid
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgbc96d1f" class="outline-2"&gt;
&lt;h2 id="orgbc96d1f"&gt;13. 列出所有tcp和udp连接&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgbc96d1f"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsof -i tcp; lsof -i udp
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org233062b" class="outline-2"&gt;
&lt;h2 id="org233062b"&gt;14. 列出所有的网络文件系统&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org233062b"&gt;
&lt;p&gt;
网络文件系统（network file system）&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsof -N -u username
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>linux</category><category>lsof</category><category>shell</category><guid>https://blog.wangzhl.com/posts/linux-command-examples-lsof/</guid><pubDate>Wed, 21 Mar 2018 12:28:34 GMT</pubDate></item></channel></rss>